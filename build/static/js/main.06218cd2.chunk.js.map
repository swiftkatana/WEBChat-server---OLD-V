{"version":3,"sources":["config/state.js","respondList.js","api/apiKeys.js","history.js","api/serverIP.js","api/myserver.js","io.js","action/index.js","action/types.js","components/screens/DrawerPage.jsx","components/screens/SerachFriendScreen.jsx","components/LogicArea.js","components/screens/ProfileScreen.jsx","components/chat/FrindCard.jsx","components/chat/UsersList.jsx","components/screens/FriendsListScreen.jsx","components/chat/Login.jsx","components/chat/Register.jsx","components/screens/register-login/ScreenLoginRegister.jsx","components/screens/LobyPageScreen.jsx","components/chat/ChatWindow.jsx","components/screens/chatScreen/ChatScreen.jsx","App.jsx","serviceWorker.js","reducers/chatArea.js","reducers/callReducer.js","reducers/languageReducer.js","reducers/index.js","reducers/userReducer.js","index.js"],"names":["exports","state","productionIp","responedList","DBError","infoInvalid","route","FaildSave","loginFaildAlreadyConnect","UserIsAlreadyCreated","UserNotCreated","companyNameExists","usersNotFound","emailNotExistsL","NotExists","isInUse","userLoginUrl","password","email","queryUsers","_id","query","getMyFriendsUrl","userRegisterUrl","userChangePasswrordUrl","userChangePasswordWithRestCode","useruploadshfits","userRequestRestCode","userGetChatsUrl","sendFriendRequestUrl","acceptFriendRequestUrl","userUpdateStyleUrl","history","createHashHistory","changeURL","url","location","pathname","push","ip","axios","create","baseURL","headers","socketIOClient","openChat","chatId","dispatch","a","server","post","data","err","console","log","alert","type","payload","updatefriend","add_Friend","newFriend","fetchChats","Chats","apiKeys","ids","catch","then","res","chats","signIn","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","alignItems","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","connect","user","language","changeLeg","leg","createCHAT","formValues","deleteChat","rendId","delete","setTimeout","signOut","io","emit","children","classes","useTheme","React","useState","open","setOpen","container","document","querySelector","addEventListener","e","initialX","touches","clientX","initialY","clientY","passive","currentX","currentY","diffX","diffY","Math","abs","handleDrawerClose","handleDrawerOpen","preventDefault","className","langNow","CssBaseline","AppBar","position","clsx","Toolbar","Typography","variant","noWrap","IconButton","color","aria-label","onClick","edge","Drawer","anchor","paper","direction","Button","id","List","Fragment","ListItem","button","key","ListItemIcon","src","imageProfile","alt","ListItemText","primary","firstName","Divider","friends","Object","values","map","lastName","nextLan","languages","filter","l","renderImgLeg","error","setError","users","setUsers","setQuery","idForTheClock","setIdForTheClock","loading","setLoading","errors","texts","SerachFriendScreen","useEffect","getAllUsers","myserver","get","onClickSendReq","geter","sender","Container","InputGroup","FormControl","value","onChange","target","clearTimeout","time","cancelOrStartTheClock","placeholder","Prepend","Text","ListGroup","Row","Col","xs","md","LinearProgress","errorText","Form","renderErrorMessage","Item","Avatar","style","fontSize","startLookin","LogicArea","show","whatKind","body","lastFriendReq","newReqSound","Audio","setListenerSocket","props","isLogin","connected","on","play","setState","status","chat","deleteFriend","addMessage","off","onClickDeclineReq","onClickAcceptReq","accepter","onShowOrHide","renderModal","onGood","onBad","good","bad","header","Modal","aria-labelledby","centered","onHide","Header","closeButton","Title","Body","Footer","this","Component","friend","FrindCard","buttons","Grid","item","Tooltip","title","text","UsersList","whatKindOfList","friendsListHeader","arr","length","indexOf","renderUsersList","onclickDeletefriend","onclickBlockfriend","btn1","btn2","user2","user1","btn3","connections","renderFriendsList","setEmail","setPassword","hidePassword","setHidePassword","isLoading","loginRegisterScreen","handlerSubmit","message","onSubmit","login","leabel","Group","controlId","Label","Control","required","subText","Append","disabled","setFirstName","setLastName","errorLogin","register","setLogin","size","block","buttonForRegister","buttonForLogin","renderStyleForTheMessage","mesagesArr","index","aria-live","aria-atomic","minHeight","senderId","textAlign","top","right","minWidth","backgroundColor","date","d","Date","floor","m","y","renderDateOfCreateMessage","createTime","senderName","scroolDown","getDate","ChatScreen","scrooDown","float","clear","ref","el","scrollToBottom","meassgesEnd","scrollIntoView","behavior","addmessage","onChangeText","meassge","currentTarget","onEnterPress","keyCode","shiftKey","handlerClickMSG","toLocaleString","hour","minute","renderSomeOneIsTypeing","whoIsTypeingNow","names","name","meassges","createRef","call","myStream","theirStream","gotAcall","onCall","close","elem","height","scrollHeight","messages","setUpOffer","onKeyDown","as","rows","aria-multiline","autoComplete","auth","chatArea","path","exact","component","Profile","FriendsList","LobyPageScreen","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","INS","thierStream","English","searchUsersForFriend","navBtn","gallery","address","phone","Hebrew","leabel2","placeholder2","languageReducer","keys","action","combineReducers","form","reducer","forEach","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","getElementById","URL","process","href","origin","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"iFAAAA,EAAQC,MAAQ,MAChBD,EAAQE,aAAe,I,kBCDvBF,EAAQG,aAAe,CACrBC,QAAS,UACTC,YAAa,cACbC,MAAO,4CACPC,UAAW,YACXC,yBAA0B,2BAE1BC,qBAAsB,uBAEtBC,eAAgB,iBAEhBC,kBAAmB,oBAEnBC,cAAe,gBAEfC,gBAAiB,cAEjBC,UAAW,YACXC,QAAS,Y,uDCfXf,EAAQgB,aAAe,eAACC,EAAD,uDAAY,GAAIC,EAAhB,uDAAwB,GAAxB,yCAA2DD,EAA3D,kBAA6EC,IAEpGlB,EAAQmB,WAAa,eAACC,EAAD,uDAAO,GAAIC,EAAX,uDAAmB,GAAnB,kDAA+DD,EAA/D,kBAA4EC,IAEjGrB,EAAQsB,gBAAkB,SAACF,GAAD,4CAAwCA,IAIlEpB,EAAQuB,gBAAkB,qBAK1BvB,EAAQwB,uBAAyB,2BAIjCxB,EAAQyB,+BAAiC,iCAIzCzB,EAAQ0B,iBAAmB,yBAI3B1B,EAAQ2B,oBAAsB,mCAK9B3B,EAAQ4B,gBAAkB,qBAI1B5B,EAAQ6B,qBAAuB,iCAE/B7B,EAAQ8B,uBAAyB,+BAQjC9B,EAAQ+B,mBAAqB,4B,+bC9CzBC,EAAUC,cAEDC,EAAY,SAACC,GACpBH,EAAQI,SAASC,WAAaF,GAChCH,EAAQM,KAAKH,IAIFH,I,2BCJAO,EADM,QAAVtC,QADQ,4BACuBC,eCE3BsC,MAAMC,OAAO,CAACC,QAAQH,GAHxB,CACTI,QAAS,CAAC,8BAA+B,O,SCD9B,M,OAAIC,GAAeL,G,0BC8BrBM,EAAW,SAACC,GAAD,8CAAY,WAAOC,GAAP,iBAAAC,EAAA,sEACXC,EAAOC,KAAK,oBAAqB,CAAEJ,WADxB,qBAC1BK,EAD0B,EAC1BA,MACCC,IAFyB,wBAGhCC,QAAQC,IAAIH,GACZI,MAAMJ,EAAKC,KAJqB,2BAOhCL,EAAS,CACPS,KCnCmB,YDoCnBC,QAASN,IAGXjB,EAAU,SAZsB,4CAAZ,uDAsBXwB,GAAe,SAACP,GAC3B,MAAO,CACLK,KC5CgC,uBD6ChCC,QAASN,IAGAQ,GAAa,SAACC,GACzB,MAAO,CACLJ,KCnDsB,aDoDtBC,QAASG,IAIAC,GAAa,SAACC,GAAD,8CAAW,WAAOf,GAAP,eAAAC,EAAA,sEACfC,EACjBC,KAAKa,IAAQnC,gBAAiB,CAAEoC,IAAKF,IACrCG,OAAM,SAACb,GAAD,OAASjD,eAAaC,WAC5B8D,MAAK,SAACC,GAAD,OAASA,EAAIhB,QAJc,SAC7BiB,EAD6B,SAKrBA,EAAMhB,KAAiB,YAAVgB,EACzBf,QAAQC,IAAI,SAGZP,EAAS,CACPS,KC3EqB,cD4ErBC,QAASW,IAXsB,2CAAX,uDA6DbC,GAAS,SAAClB,GACrB,MAAO,CAAEK,KClIY,UDkIGC,QAASN,IA0C5B,IE3IDmB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,OAAQ,CACNC,WAAYJ,EAAMK,YAAYpC,OAAO,CAAC,SAAU,SAAU,CACxDqC,OAAQN,EAAMK,YAAYC,OAAOC,MACjCC,SAAUR,EAAMK,YAAYG,SAASC,iBAGzCC,YAAa,CACXC,WAAY,SACZC,MAAM,eAAD,OAdW,IAcX,OACLC,WAfgB,IAgBhBT,WAAYJ,EAAMK,YAAYpC,OAAO,CAAC,SAAU,SAAU,CACxDqC,OAAQN,EAAMK,YAAYC,OAAOQ,QACjCN,SAAUR,EAAMK,YAAYG,SAASO,kBAGzCC,WAAY,CACVC,YAAajB,EAAMkB,QAAQ,IAE7BC,KAAM,CACJjB,QAAS,QAEXkB,OAAQ,CACNR,MA5BgB,IA6BhBS,WAAY,GAEdC,YAAa,CACXV,MAhCgB,KAkClBW,aAAa,yBACXrB,QAAS,OACTS,WAAY,SACZa,QAASxB,EAAMkB,QAAQ,EAAG,IAEvBlB,EAAMyB,OAAOC,SALN,IAMVC,eAAgB,aAElBC,QAAS,CACPC,SAAU,EACVL,QAASxB,EAAMkB,QAAQ,GACvBd,WAAYJ,EAAMK,YAAYpC,OAAO,SAAU,CAC7CqC,OAAQN,EAAMK,YAAYC,OAAOC,MACjCC,SAAUR,EAAMK,YAAYG,SAASC,gBAEvCI,YAjDgB,KAmDlBiB,aAAc,CACZ1B,WAAYJ,EAAMK,YAAYpC,OAAO,SAAU,CAC7CqC,OAAQN,EAAMK,YAAYC,OAAOQ,QACjCN,SAAUR,EAAMK,YAAYG,SAASO,iBAEvCF,WAAY,OAwQhB,IAKekB,gBALS,SAAC,GAAD,MAAyB,CAC/CC,KADsB,EAAGA,KAEzBC,SAFsB,EAASA,YAKO,CACtCC,UFzLuB,SAACC,GACxB,MAAO,CACLnD,KChK0B,iBDiK1BC,QAASkD,IEuLXC,WFrTwB,SAACC,GAAD,8CAAgB,WAAO9D,GAAP,iBAAAC,EAAA,sEACjBC,EAAOC,KAAK,uBAAwB2D,GADnB,gBAChC1D,EADgC,EAChCA,KACRE,QAAQC,IAAIH,GAEZJ,EAAS,CAAES,KCnDc,cDmDKC,QAASN,IAJC,2CAAhB,uDEsTxBN,WACAiE,WF1PwB,SAACC,GAAD,OAAY,SAAChE,GACrCE,EAAO+D,OAAP,uBAA8BD,IAC9BhE,EAAS,CAAES,KC3Gc,cD2GKC,QAASsD,IACvCE,YAAW,WACT/E,EAAU,OACT,MEsPH2B,cACAqD,QFrOqB,WAErB,OADAC,EAAGC,KAAK,YACD,CACL5D,KCvIoB,cCmWT+C,EAzQf,YAGgB,IAHMC,EAGP,EAHOA,KAAMa,EAGb,EAHaA,SAAUZ,EAGvB,EAHuBA,SACpC5D,EAEa,EAFbA,SACAqE,EACa,EADbA,QACAR,EAAa,EAAbA,UACMY,EAAUhD,KACVE,EAAQ+C,cAFD,EAGWC,IAAMC,UAAS,GAH1B,mBAGNC,EAHM,KAGAC,EAHA,KAITC,EAAYC,SAASC,cAAc,SAEvCF,EAAUG,iBAAiB,cAO3B,SAAoBC,GAClBC,EAAWD,EAAEE,QAAQ,GAAGC,QACxBC,EAAWJ,EAAEE,QAAQ,GAAGG,UAT2B,CAAEC,SAAS,IAChEV,EAAUG,iBAAiB,aAW3B,SAAmBC,GACjB,GAAiB,OAAbC,EACF,OAGF,GAAiB,OAAbG,EACF,OAGF,IAAIG,EAAWP,EAAEE,QAAQ,GAAGC,QACxBK,EAAWR,EAAEE,QAAQ,GAAGG,QAExBI,EAAQR,EAAWM,EACnBG,EAAQN,EAAWI,EAEnBG,KAAKC,IAAIH,GAASE,KAAKC,IAAIF,KAEzBD,EAAQ,EAEVI,IAGAC,KAIJb,EAAW,KACXG,EAAW,KAEXJ,EAAEe,mBAxC+C,CAAET,SAAS,IAG9D,IAAIL,EAAW,KACXG,EAAW,KAuCTU,EAAmB,WACvBnB,GAAQ,IAGJkB,EAAoB,WACxBlB,GAAQ,IA2HV,OACE,yBAAKqB,UAAS,WAA2B,YAArBvC,EAASwC,QAAwB,WAAa,YAApD,YAAmE3B,EAAQ7C,KAA3E,MACZ,kBAACyE,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CACEC,SAAS,QACTJ,UAAWK,YAAK/B,EAAQ3C,OAAT,eACZ2C,EAAQpC,YAAcwC,KAGzB,kBAAC4B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,IAC/B,kBAACC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXC,QAASf,EACTgB,KAAK,QACLd,UAAWK,YAAK/B,EAAQ9B,WAAYkC,GAAQJ,EAAQ3B,OAEpD,kBAAC,IAAD,SAIN,kBAACoE,EAAA,EAAD,CACEf,UAAW1B,EAAQ1B,OACnB4D,QAAQ,aACRQ,OAAO,OACPtC,KAAMA,EACNJ,QAAS,CACP2C,MAAO3C,EAAQxB,cAGjB,yBAAKkD,UAAW1B,EAAQvB,cACtB,kBAAC2D,EAAA,EAAD,CAAYG,QAAShB,GACE,QAApBrE,EAAM0F,UACL,kBAAC,IAAD,MAEA,kBAAC,IAAD,QAIN,kBAACC,EAAA,EAAD,CACEX,QAAQ,YACRY,GAAG,MACHP,QAAS,WACP,GAAkC,MAA9B7H,EAAQI,SAASC,SAAkB,OAAO,KAC9CH,EAAU,MALd,OAUA,kBAACmI,EAAA,EAAD,KArKC7D,EAsBH,kBAAC,IAAM8D,SAAP,KACE,kBAACC,EAAA,EAAD,CACEV,QAAS,kBAAM3H,EAAU,aACzBsI,QAAM,EACNC,IAAK,kBAEL,kBAACC,EAAA,EAAD,KACE,yBACE1B,UAAU,oBACV2B,IAAKnE,EAAKoE,aACVC,IAAI,mBACH,KAEL,kBAACC,EAAA,EAAD,CAAcC,QAASvE,EAAKwE,aAE9B,kBAACT,EAAA,EAAD,CACEV,QAAS,WACP3H,EAAU,KACVgF,EAAQV,EAAKtF,QAEfsJ,QAAM,EACNC,IAAK,iBAEL,kBAACC,EAAA,EAAD,KACE,yBACE1B,UAAU,oBACV2B,IAAI,aACJE,IAAI,kBACH,KAEL,kBAACC,EAAA,EAAD,CAAcC,QAAS,YAEzB,kBAACE,EAAA,EAAD,OArDK,MAyKL,kBAACZ,EAAA,EAAD,KA9GC7D,EAEH,oCACE,kBAAC+D,EAAA,EAAD,CAAUV,QAAS,kBAAM3H,EAAU,aAAasI,QAAM,EAACC,IAAK,YAC1D,kBAACC,EAAA,EAAD,KACE,yBACE1B,UAAU,oBACV2B,IAAI,cACJE,IAAI,oBACH,KAEL,kBAACC,EAAA,EAAD,CAAcC,QAAS,qBAEzB,kBAACR,EAAA,EAAD,CACEV,QAAS,kBAAM3H,EAAU,iBACzBsI,QAAM,EACNC,IAAK,gBAEL,kBAACC,EAAA,EAAD,KACE,yBACE1B,UAAU,oBACV2B,IAAI,kBACJE,IAAI,wBACH,KAEL,kBAACC,EAAA,EAAD,CAAcC,QAAS,kBAEzB,kBAACE,EAAA,EAAD,OA3Bc,MAmHd,kBAACZ,EAAA,EAAD,KAjFC7D,GACAA,EAAK0E,QACMC,OAAOC,OAAO5E,EAAK0E,SACpBG,KAAI,SAAC7E,GAAD,OAEjB,kBAAC+D,EAAA,EAAD,CACEV,QAAS,kBAzGgB/G,EAyGY0D,EAAK1D,YAxG9CD,EAASC,GADmB,IAACA,GA0GzB0H,QAAM,EACNC,IAAKjE,EAAKpF,KAEV,yBAAKuJ,IAAKnE,EAAKoE,aAAcC,IAAI,aACjC,kBAACC,EAAA,EAAD,CAAcC,QAAO,UAAKvE,EAAKwE,UAAV,YAAuBxE,EAAK8E,gBAXnC,MAqFd,kBAACL,EAAA,EAAD,MArEe,WACnB,IAAIM,EAAU9E,EAAS+E,UAAUC,QAAO,SAAAC,GAAC,OAAIA,IAAMjF,EAASwC,WAC5D,OAAO,yBAAK0B,IAAG,UAAKY,EAAQ,GAAb,QAAuB1B,QAAS,kBAAMnD,EAAU6E,EAAQ,KAAKvC,UAAU,SAAS6B,IAAI,yCAqE9Fc,IAEH,0BACE3C,UAAWK,YAAK/B,EAAQlB,QAAT,eACZkB,EAAQhB,aAAeoB,KAG1B,yBAAKsB,UAAW1B,EAAQvB,eACvBsB,O,0FCpJMd,gBALS,SAAC,GAAD,MAAyB,CAC/CC,KADsB,EAAGA,KAEzBC,SAFsB,EAASA,YAKO,CAAE9C,eAA3B4C,EApLM,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,SAAU9C,EAAiB,EAAjBA,WAAiB,EAC7B8D,mBAAS,IADoB,mBAChDmE,EADgD,KACzCC,EADyC,OAE7BpE,mBAAS,IAFoB,mBAEhDqE,EAFgD,KAEzCC,EAFyC,OAG7BtE,mBAAS,IAHoB,mBAGhDpG,EAHgD,KAGzC2K,EAHyC,OAIbvE,mBAAS,IAJI,mBAIhDwE,EAJgD,KAIjCC,EAJiC,OAKzBzE,oBAAS,GALgB,mBAKhD0E,EALgD,KAKvCC,EALuC,KAQnDC,EAAS5F,EAAS6F,MAAMD,OACxBC,EAAQ7F,EAAS6F,MAAMC,mBAE3BC,qBAAU,WACJL,IAAY9K,GACd+K,GAAW,KAEZ,CAAC/K,EAAO8K,IAEX,IAAMM,EAAW,uCAAG,gCAAAzJ,EAAA,kEAEXwD,GAASnF,EAFE,yCAGP,MAHO,uBAKEqL,EAASC,IAAIxL,qBAAWqF,EAAKpF,IAAKC,IALpC,OAKV8C,EALU,OAMZyH,EAAQzH,EAAIhB,KAAKyI,MACjBE,EAAQ3H,EAAIhB,KAAK2I,MAEjBF,GACFvI,QAAQC,IAAIsI,GACZQ,GAAW,GACXP,EAASD,KAITG,EAASD,GAAS,IAClBM,GAAW,IAjBG,kDAsBhBP,EAAS,EAAD,IAtBQ,0DAAH,qDA2BXe,EAAc,uCAAG,WAAOC,GAAP,mBAAA7J,EAAA,+EAED0J,EAASxJ,KAAKrB,uBAAsB,CAAEgL,QAAOC,OAAQtG,IAFpD,OAEbrC,EAFa,OAIfyH,EAAQzH,EAAIhB,KAAKyI,MACjBzI,EAAOgB,EAAIhB,KAAKqD,KAEhBoF,EACFC,EAASD,GAGTjI,EAAWR,GAXM,gDAenB0I,EAAS,EAAD,IAfW,yDAAH,sDAiHpB,OACE,kBAACkB,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAYhE,UAAU,gBACpB,kBAACiE,GAAA,EAAD,CACEC,MAAO7L,EACP8L,SApFY,SAACnF,GACfA,EAAEoF,OAAOF,OAbe,WACxBjB,IACFoB,aAAapB,GACbC,EAAiB,KAEnB,IAAMoB,EAAOrG,YAAW,WACtBmF,GAAW,GACXK,MACC,KACHP,EAAiBoB,GAKfC,GACFvB,EAAShE,EAAEoF,OAAOF,QAkFZ9C,GAAG,gCACHoD,YAAY,UAEd,kBAACR,GAAA,EAAWS,QAAZ,KACE,kBAACT,GAAA,EAAWU,KAAZ,YAGJ,kBAACC,GAAA,EAAD,KAhCExB,EATF,kBAACyB,GAAA,EAAD,CAAK5E,UAAU,mBACb,kBAAC6E,GAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,IACf,kBAACC,GAAA,EAAD,CAAgBrE,MAAM,gBAUvBtI,EAMDuK,EAnCqB,WAEzB,IAAKA,EACH,OAAO,KACT,IAAIqC,EAAY5B,EAAOT,IAAUA,EAEjC,OADAvI,QAAQC,IAAI2K,GAEV,kBAACC,GAAA,EAAKR,KAAN,CAAW1E,UAAU,SAClBiF,GA4BIE,GA/DFrC,EAAMT,KAAI,SAAC7E,GAAD,OACf,kBAACmH,GAAA,EAAUS,KAAX,CAAgB3D,IAAKjE,EAAKtF,MAAO8H,UAAU,OACzC,kBAAC4E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KACN,kBAACO,GAAA,EAAD,CACExD,IAAI,UACJF,IAAKnE,EAAKoE,aACV0D,MAAO,CAAEC,SAAU,OAGvB,kBAACV,GAAA,EAAD,CAAKC,GAAG,KACN,qCAAOtH,EAAKwE,UAAZ,YAAyBxE,EAAKtF,SAEhC,kBAAC2M,GAAA,EAAD,CAAKC,GAAG,KACN,kBAACO,GAAA,EAAD,CACErF,UAAU,qBACVa,QAAS,kBAAM+C,EAAepG,IAC9BqE,IAAI,aACJF,IAAI,gBACJ2D,MAAO,CAAEC,SAAU,YAuCzB,wBAAIvF,UAAU,QAAd,IAAwBsD,EAAMkC,kB,wDCzJhCC,G,+MACJxO,MAAQ,CACNyO,MAAM,EACNC,SAAU,GACVC,KAAM,GACNC,cAAe,GACfC,YAAa,IAAIC,MAAM,e,EAMzBC,kBAAoB,WACd,EAAKC,MAAMC,SAAW,EAAKD,MAAMzI,MAC9BW,EAAGgI,WACNhI,EAAGZ,UAGLY,EAAGiI,GAAG,WAAa,EAAKH,MAAMzI,KAAKpF,KAAK,YAAqB,IAAlBoC,EAAiB,EAAjBA,KAAML,EAAW,EAAXA,KAE/C,OADAE,QAAQC,IAAI,eAAgBE,GACpBA,GAGN,IAAK,qBACHH,QAAQC,IAAI,UACZ,EAAKrD,MAAM6O,YAAYO,OAEvB,EAAKC,SAAS,CACZT,cAAe1L,EACfuL,MAAM,EACNC,SAAU,eACVC,KAAMzL,EAAK6H,UAAY,IAAM7H,EAAKmI,WAEpC,EAAK2D,MAAMtL,WAAWR,GAEtB,MAGF,IAAK,kBACiB,WAAhBA,EAAKoM,SACP,EAAKtP,MAAM6O,YAAYO,OAEvB,EAAKC,SAAS,CACZT,cAAe1L,EACfuL,MAAM,EACNC,SAAU,eACVC,KAAMzL,EAAK6H,UAAY,IAAM7H,EAAKmI,YAGtC,EAAK2D,MAAMvL,aAAa,CACtBtC,IAAK+B,EAAK/B,IACVmO,OAAQ,SACRzM,OAAQK,EAAKL,OACb0D,KAAMrD,EACNqM,KAAMrM,EAAKqM,OAEb,MAGF,IAAK,eACHnM,QAAQC,IAAI,UACZ,EAAK2L,MAAMQ,aAAatM,GACxB,MAGF,IAAK,mBACHE,QAAQC,IAAI,WACZ,EAAK2L,MAAMQ,aAAatM,GACxB,MAGF,IAAK,iBACHE,QAAQC,IAAI,SAEZ,EAAK2L,MAAMvL,aAAa,CACtBtC,IAAK+B,EAAK/B,IACVoF,KAAMrD,EACNoM,OAAQ,YAEV,MACF,IAAK,UACH,EAAKN,MAAMS,WAAWvM,GACtBE,QAAQC,IAAI,iBACZ,MAEF,QACEC,MAAMJ,SAMH,EAAKlD,MAAMmK,IAAO,EAAK6E,MAAMC,SAAY,EAAKD,MAAMzI,MAC7DW,EAAGwI,O,EAGPC,kBAAoB,SAAC9C,GACnB,EAAKwC,SAAS,CAAEZ,MAAM,IAGtBhC,EAASxJ,KAAK,6BAA8B,CAC1C4J,OAAQ,EAAKmC,MAAMzI,KACnBqG,MAAOC,K,EAIX+C,iB,uCAAmB,WAAO/C,GAAP,eAAA9J,EAAA,6DACjB,EAAKsM,SAAS,CAAEZ,MAAM,IADL,SAIDhC,EAASxJ,KAAK,4BAA6B,CACzD4M,SAAU,EAAKb,MAAMzI,KACrBsG,OAAQA,IANO,OAIb3I,EAJa,OAUjBZ,MAAMY,EAAIhB,MAVO,2C,wDAYnB4M,aAAe,WACb,EAAKT,SAAS,CAAEZ,MAAO,EAAKzO,MAAMyO,Q,EAGpCsB,YAAc,WACZ,IAAK,EAAK/P,MAAMyO,KAAM,OAAO,KAC7B,IAAIuB,EAAQC,EAAOC,EAAMC,EAAKC,EAAQzB,EAEtC,OAAQ,EAAK3O,MAAM0O,UACjB,IAAK,QACHyB,EAAM,QACNC,EAAS,QACTzB,EAAO,EAAK3O,MAAM2O,KAClBsB,EAAQ,kBAAM,EAAKH,gBACnB,MACF,IAAK,eACH1M,QAAQC,IAAI,EAAKrD,MAAM4O,eACvBsB,EAAO,SACPC,EAAM,UACNC,EAAS,6BACTzB,EAAI,4CAAwC,EAAK3O,MAAM2O,KAAnD,KACJqB,EAAS,WACP,EAAKJ,iBAAiB,EAAK5P,MAAM4O,gBAEnCqB,EAAQ,WACN,EAAKN,kBAAkB,EAAK3P,MAAM4O,gBAEpC,MACF,IAAK,kBACHuB,EAAM,QACNC,EAAS,iBACTzB,EAAI,WAAO,EAAK3O,MAAM2O,KAAlB,6CACJsB,EAAQ,kBAAM,EAAKH,gBAOvB,OACE,kBAACO,GAAA,EAAD,CACEC,kBAAgB,gCAChBC,UAAQ,EACR9B,KAAM,EAAKzO,MAAMyO,KACjB+B,OAAQ,EAAKV,cAEb,kBAACO,GAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,GAAA,EAAMM,MAAP,KAAcP,IAEhB,kBAACC,GAAA,EAAMO,KAAP,KAAajC,GACb,kBAAC0B,GAAA,EAAMQ,OAAP,KACGX,EACC,kBAAC,KAAD,CAAQ3G,QAAQ,YAAYK,QAASoG,GAClCE,GAED,KACHC,EACC,kBAAC,KAAD,CAAQ5G,QAAQ,SAASK,QAASqG,GAC/BE,GAED,Q,oEAxKVW,KAAK/B,sB,+BA+KL,OAAO,oCAAG+B,KAAKf,mB,GAzLKxI,IAAMwJ,WAgMfzK,gBAJS,SAACtG,GAAD,MAAY,CAClCuG,KAAMvG,EAAMuG,QAG0B,CACtC7C,cACAD,gBACA+L,aJ3G0B,SAACwB,GAC3B,MAAO,CACLzN,KCnFyB,gBDoFzBC,QAASwN,IIyGXvB,WJ/GwB,SAACvM,GACzB,MAAO,CAAEK,KC9EgB,cD8EGC,QAASN,KI0GxBoD,CAKZkI,ICvLYlI,gBALS,SAAC,GAAD,MAAe,CACnCC,KADoB,EAAGA,QAKa,GAAzBD,EAnBC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAOf,OACI,6BACI,qCANCA,EAEEA,EAAKwE,UAFM,KAMd,S,oBCuCGkG,OA/Cf,YAAyC,IAApBD,EAAmB,EAAnBA,OAAQE,EAAW,EAAXA,QA4B3B,OACE,kBAACxD,GAAA,EAAUS,KAAX,CAAgBpF,UAAU,OACxB,kBAAC4E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKC,GAAG,KACN,kBAACO,GAAA,EAAD,CACExD,IAAI,UACJF,IAAKsG,EAAOrG,aACZ0D,MAAO,CAAEC,SAAU,OAGvB,kBAACV,GAAA,EAAD,CAAKC,GAAG,KACN,qCAAOmD,EAAOjG,UAAd,YAA2BiG,EAAO/P,SAEpC,kBAAC2M,GAAA,EAAD,CAAKC,GAAG,KAvCU,YAAlBmD,EAAO1B,OAEP,kBAAC6B,GAAA,EAAD,CAAM3G,IAAKwG,EAAO7P,IAAKiQ,MAAI,GACxBF,EAAQ9F,KAAI,SAACb,GACZ,OACE,kBAAC8G,GAAA,EAAD,CACEzH,QAAS,kBAAMW,EAAOX,QAAQoH,IAC9BxG,IAAKD,EAAO+G,MACZA,MAAO/G,EAAO+G,OAEd,kBAAC,KAAD,KAAS/G,EAAOgH,WAO1B,kBAACF,GAAA,EAAD,CACE7G,IAAK,UACL8G,MAAO,eAAiBN,EAAOjG,UAAY,gBAE3C,kBAAC,KAAD,KAAS,gBCxBF,SAASyG,GAAT,GAKX,IAJFC,EAIC,EAJDA,eACAxG,EAGC,EAHDA,QACAiG,EAEC,EAFDA,QACAQ,EACC,EADDA,kBAwBA,OAtBwB,SAACH,GACvB,IAAII,EAAM,GAUV,OATI1G,EAAQ2G,OAAS,GACnB3G,EAAQG,KAAI,SAAC4F,GAAD,OACiC,IAA3CS,EAAeI,QAAQb,EAAO1B,QAC1B,KACAqC,EAAItP,KACF,kBAAC,GAAD,CAAWmI,IAAKwG,EAAO7P,IAAK6P,OAAQA,EAAQE,QAASA,QAI3DS,EAAIC,OAAS,EAEb,6BACE,wBAAI7I,UAAW,qBAAsB2I,GACpCC,GAIA,KAGFG,GCtBT,IAwFexL,gBAJS,SAACtG,GAAD,MAAY,CAClCuG,KAAMvG,EAAMuG,QAG0B,CAAE9C,gBAAcb,YAAzC0D,EAxFK,SAAC0I,GACnB,IAOM+C,EAAsB,SAACnF,GAC3BxJ,QAAQC,IAAI,UACZoJ,EAASxJ,KAAK,4BAA6B,CACzC4J,OAAQmC,EAAMzI,KACdqG,WAGEoF,EAAqB,SAACpF,GAC1BH,EAASxJ,KAAK,2BAA4B,CACxC4J,OAAQmC,EAAMzI,KACdqG,QACArJ,KAAM,aAaN0O,EAAO,CACT,CAAErI,QAJe,SAACoH,GAClBhC,EAAMpM,SAASoO,EAAOnO,SAGC0O,KAAM,YAAaD,MAAO,aACjD,CAAE1H,QAASmI,EAAqBR,KAAM,SAAUD,MAAO,iBACvD,CAAE1H,QAASoI,EAAoBT,KAAM,QAASD,MAAO,mBAEnDY,EAAO,CACT,CAAEtI,QAASoI,EAAoBT,KAAM,QAASD,MAAO,iBACrD,CAAE1H,QAtCqB,SAACuI,GACxB1F,EAASxJ,KAAKpB,yBAAwB,CACpCuQ,MAAOpD,EAAMzI,KACb4L,QACA5O,KAAM,YAkCqBgO,KAAM,SAAUD,MAAO,kBACpD,CACE1H,QAASmI,EACTR,KAAM,UACND,MAAO,oBAGPe,EAAO,CACT,CAAEzI,QAxBqB,SAACgD,GACxBH,EAASxJ,KAAK,0BAA2B,CACvC4J,OAAQmC,EAAMzI,KACdqG,WAqB2B2E,KAAM,UAAWD,MAAO,qBAkCvD,OAAO,kBAACxE,GAAA,EAAD,KA/BmB,WACxB,GAAIkC,EAAMzI,KAAM,CACd,IAAM0E,EAAUC,OAAOC,OAAO6D,EAAMzI,KAAK+L,aACzC,OACE,6BACE,kBAACd,GAAD,CACEvG,QAASA,EACTyG,kBAAmB,UACnBR,QAASe,EACTR,eAAgB,CAAC,SAAU,aAG7B,kBAACD,GAAD,CACEvG,QAASA,EACTyG,kBAAmB,mBACnBR,QAASgB,EACTT,eAAgB,CAAC,UAAW,YAG9B,kBAACD,GAAD,CACEvG,QAASA,EACTyG,kBAAmB,YACnBR,QAASmB,EACTZ,eAAgB,CAAC,aAKzB,OAAO,yDAGUc,OCiCrB,IAIejM,gBAJS,SAAC,GACvB,MAAO,CAAEE,SAD+B,EAAfA,YAIa,CAAEpC,WAA3BkC,EAtHf,YAAsC,IAArBE,EAAoB,EAApBA,SAAUpC,EAAU,EAAVA,OAAU,EAEToD,mBAAS,IAFA,mBAE5BvG,EAF4B,KAErBuR,EAFqB,OAGHhL,mBAAS,IAHN,mBAG5BxG,EAH4B,KAGlByR,EAHkB,OAIKjL,oBAAS,GAJd,mBAI5BkL,EAJ4B,KAIdC,EAJc,OAKTnL,mBAAS,IALA,mBAK5BmE,EAL4B,KAKrBC,EALqB,OAMHpE,oBAAS,GANN,mBAM5BoL,EAN4B,KAMjBzG,EANiB,KAQ/BE,EAAQ7F,EAAS6F,MAAMwG,oBACvBzG,EAAS5F,EAAS6F,MAAMD,OACtB0G,EAAa,uCAAG,WAAM/K,GAAN,eAAAhF,EAAA,sEAElBoJ,GAAW,GACXpE,EAAEe,iBAHgB,SAIA2D,EAASC,IAAI3L,uBAAaC,EAAUC,IAJpC,OAIZiD,EAJY,OAKlBiI,GAAW,GACPjI,EAAIhB,KAAKyI,OACXC,EAAS1H,EAAIhB,KAAKyI,OAEhBzH,EAAIhB,KAAKqD,OACXW,EAAGC,KAAK,oBAAqBjD,EAAIhB,KAAKqD,KAAKtF,OAC3CmD,EAAOF,EAAIhB,KAAKqD,OAXA,kDAiBlB4F,GAAW,GACXP,EAAS,KAAMmH,SAlBG,0DAAH,sDAuDnB,OACE,kBAAC9E,GAAA,EAAD,CAAM+E,SAAUF,GACd,wBAAI/J,UAAU,cAAcsD,EAAM4G,MAAMC,QACxC,kBAACjF,GAAA,EAAKkF,MAAN,CAAYpK,UAAU,GAAGqK,UAAU,kBACjC,kBAACnF,GAAA,EAAKoF,MAAN,KAAahH,EAAMpL,MAAMiS,QACzB,kBAACjF,GAAA,EAAKqF,QAAN,CACErG,MAAOhM,EACPsS,UAAQ,EACRhQ,KAAK,QACL2J,SAlBmB,SAACnF,GACtB4D,GACF3E,YAAW,WACT4E,EAAS,MACR,KAEL4G,EAASzK,EAAEoF,OAAOF,QAaZM,YAAalB,EAAMpL,MAAMsM,cAE3B,kBAACU,GAAA,EAAKR,KAAN,CAAW1E,UAAU,cAClBsD,EAAMpL,MAAMuS,UAIjB,kBAACvF,GAAA,EAAKkF,MAAN,CAAYC,UAAU,qBACpB,kBAACnF,GAAA,EAAKoF,MAAN,KAAahH,EAAMrL,SAASkS,QAC5B,kBAACnG,GAAA,EAAD,CAAYhE,UAAU,QACpB,kBAACiE,GAAA,EAAD,CACEC,MAAOjM,EACPkM,SAxCoB,SAACnF,GACzB4D,GACF3E,YAAW,WACT4E,EAAS,MACR,KAEL6G,EAAY1K,EAAEoF,OAAOF,QAmCbsG,UAAQ,EACRhQ,KAAMmP,EAAe,WAAa,OAClCnF,YAAalB,EAAMrL,SAASuM,cAE9B,kBAACR,GAAA,EAAW0G,OAAZ,KACE,kBAAC,KAAD,CAAQ7J,QAAS,kBAAM+I,GAAiBD,IAAenJ,QAAO,UAAKmJ,EAAe,UAAY,WAC3FA,EAAe,OAAS,UA7DV,WAEzB,IAAK/G,EACH,OAAO,KACT,IAAIqC,EAAY5B,EAAOT,IAAUA,EACjC,OACE,kBAACsC,GAAA,EAAKR,KAAN,CAAW1E,UAAU,UAClBiF,GA0DAE,IAGH,kBAAC,KAAD,CACE3K,KAAK,SACLgG,QAAQ,OACRmK,SAAUd,GAETA,EAAY,gBAAavG,EAAM4G,MAAM1I,YC0F9C,IAIejE,gBAJS,SAAC,GACvB,MAAO,CAAEE,SAD+B,EAAfA,YAIa,CAAEpC,WAA3BkC,EA1Mf,YAAyC,IAArBlC,EAAoB,EAApBA,OAAQoC,EAAY,EAAZA,SAAY,EAEZgB,mBAAS,IAFG,mBAE/BvG,EAF+B,KAExBuR,EAFwB,OAGNhL,mBAAS,IAHH,mBAG/BxG,EAH+B,KAGrByR,EAHqB,OAIJjL,mBAAS,IAJL,mBAI/BuD,EAJ+B,KAIpB4I,EAJoB,OAKNnM,mBAAS,IALH,mBAK/B6D,EAL+B,KAKrBuI,EALqB,OAMZpM,mBAAS,IANG,mBAM/BmE,EAN+B,KAMxBC,EANwB,OAONpE,oBAAS,GAPH,mBAO/BoL,EAP+B,KAOpBzG,EAPoB,OAQE3E,oBAAS,GARX,mBAQ/BkL,EAR+B,KAQjBC,EARiB,KAUhCtG,EAAQ7F,EAAS6F,MAAMwG,oBACzBzG,EAAS5F,EAAS6F,MAAMD,OAuBtB0G,EAAa,uCAAG,WAAM/K,GAAN,eAAAhF,EAAA,6DACpBgF,EAAEe,iBAUFqD,GAAW,GAXS,SAYFM,EAASxJ,KAAK3B,kBAAiB,CAAEL,QAAOD,WAAU+J,YAAWM,aAZ3D,OAYdnH,EAZc,OAapBd,QAAQC,IAAIa,GACZiI,GAAW,GACPjI,EAAIhB,KAAKyI,QACPU,EAAMwH,WAAW3P,EAAIhB,KAAKyI,OAC5BC,EAASS,EAAMwH,WAAW3P,EAAIhB,KAAKyI,QAEnCC,EAAS,iBAIT1H,EAAIhB,KAAKqD,MAEXnC,EAAOF,EAAIhB,KAAKqD,MAzBE,2CAAH,sDAuHnB,OACE,kBAAC0H,GAAA,EAAD,CAAM+E,SAAUF,GACd,wBAAI/J,UAAU,cAAcsD,EAAMyH,SAASZ,QAE3C,kBAACjF,GAAA,EAAKkF,MAAN,CAAYC,UAAU,kBACpB,kBAACnF,GAAA,EAAKoF,MAAN,KAAahH,EAAMpL,MAAMiS,QACzB,kBAACjF,GAAA,EAAKqF,QAAN,CAAcrG,MAAOhM,EAAOsS,UAAQ,EAAChQ,KAAK,QAAQ2J,SAzI7B,SAACnF,GACtB4D,GACF3E,YAAW,WACT4E,EAAS,MACR,KAEL4G,EAASzK,EAAEoF,OAAOF,QAmIkEM,YAAalB,EAAMpL,MAAMsM,cAEzG,kBAACU,GAAA,EAAKR,KAAN,CAAW1E,UAAU,cAClBsD,EAAMpL,MAAMuS,UAIjB,kBAACvF,GAAA,EAAKkF,MAAN,CAAYC,UAAU,qBACpB,kBAACnF,GAAA,EAAKoF,MAAN,KAAahH,EAAMrL,SAASkS,QAC5B,kBAACnG,GAAA,EAAD,CAAYhE,UAAU,QACpB,kBAACiE,GAAA,EAAD,CACEC,MAAOjM,EACPkM,SA9JoB,SAACnF,GACzB4D,GACF3E,YAAW,WACT4E,EAAS,MACR,KAEL6G,EAAY1K,EAAEoF,OAAOF,QAyJbsG,UAAQ,EACRhQ,KAAMmP,EAAe,WAAa,OAClCnF,YAAalB,EAAMrL,SAASuM,cAE9B,kBAACR,GAAA,EAAW0G,OAAZ,KACE,kBAAC,KAAD,CAAQ7J,QAAS,kBAAM+I,GAAiBD,IAAenJ,QAAO,UAAKmJ,EAAe,UAAY,WAC3FA,EAAe,OAAS,WAnGV,YAArBlM,EAASwC,QAET,kBAACiF,GAAA,EAAKN,IAAN,KACE,kBAACC,GAAA,EAAD,KACE,kBAACK,GAAA,EAAKkF,MAAN,CAAYC,UAAU,qBACpB,kBAACnF,GAAA,EAAKoF,MAAN,KAAahH,EAAMtB,UAAUmI,QAC7B,kBAACnG,GAAA,EAAD,CAAYhE,UAAU,QACpB,kBAACiE,GAAA,EAAD,CACEC,MAAOlC,EACPmC,SAAU,SAAAnF,GAAC,OAAI4L,EAAa5L,EAAEoF,OAAOF,QACrCsG,UAAQ,EACRhQ,KAAM,QAMd,kBAACqK,GAAA,EAAD,KACE,kBAACK,GAAA,EAAKkF,MAAN,CAAYC,UAAU,qBACpB,kBAACnF,GAAA,EAAKoF,MAAN,KAAahH,EAAMhB,SAAS6H,QAC5B,kBAACnG,GAAA,EAAD,CAAYhE,UAAU,QACpB,kBAACiE,GAAA,EAAD,CACEC,MAAO5B,EACP6B,SAAU,SAAAnF,GAAC,OAAI6L,EAAY7L,EAAEoF,OAAOF,QACpCsG,UAAQ,EACRhQ,KAAM,SAWhB,kBAAC0K,GAAA,EAAKN,IAAN,KACE,kBAACC,GAAA,EAAD,KACE,kBAACK,GAAA,EAAKkF,MAAN,CAAYC,UAAU,qBACpB,kBAACnF,GAAA,EAAKoF,MAAN,KAAahH,EAAMhB,SAAS6H,QAC5B,kBAACnG,GAAA,EAAD,CAAYhE,UAAU,QACpB,kBAACiE,GAAA,EAAD,CACEC,MAAO5B,EACP6B,SAAU,SAAAnF,GAAC,OAAI6L,EAAY7L,EAAEoF,OAAOF,QACpCsG,UAAQ,EACRhQ,KAAM,QAOd,kBAACqK,GAAA,EAAD,KACE,kBAACK,GAAA,EAAKkF,MAAN,CAAYC,UAAU,qBACpB,kBAACnF,GAAA,EAAKoF,MAAN,KAAahH,EAAMtB,UAAUmI,QAC7B,kBAACnG,GAAA,EAAD,CAAYhE,UAAU,QACpB,kBAACiE,GAAA,EAAD,CACEC,MAAOlC,EACPmC,SAAU,SAAAnF,GAAC,OAAI4L,EAAa5L,EAAEoF,OAAOF,QACrCsG,UAAQ,EACRhQ,KAAM,SA1EK,WAEzB,IAAKoI,EACH,OAAO,KACT,IAAIqC,EAAY5B,EAAOT,IAAUA,EACjC,OACE,kBAACsC,GAAA,EAAKR,KAAN,CAAW1E,UAAU,UAClBiF,GAkHDE,GACF,kBAAC,KAAD,CACE3K,KAAK,SACLgG,QAAQ,UACRmK,SAAUd,GAETA,EAAY,gBAAavG,EAAMyH,SAASvJ,YC1JlCjE,I,OAAAA,aAJS,SAAC,GACvB,MAAO,CAAEC,KADqC,EAArBA,KACVC,SAD+B,EAAfA,YAIO,GAAzBF,EAjCa,SAAC,GAAqE,EAAnEC,KAAoE,IAAzCsM,EAAwC,EAA7DrM,SAAY6F,MAASwG,oBAAwC,KAAfrM,SACvDgB,oBAAS,IAD6D,mBACzFyL,EADyF,KAClFc,EADkF,KAgBhG,OACE,kBAACjH,GAAA,EAAD,CAAW/D,UAAU,IACnB,yBAAKA,UAAU,kBAdqBkK,EACtC,kBAAC,GAAD,MACA,kBAAC,GAAD,MAIE,kBAAC,KAAD,CAAQrJ,QAAS,kBAAMmK,GAAUd,IAAQ9I,GAAG,eAAeZ,QAAQ,UAAUyK,KAAK,KAAKC,OAAK,GACzFhB,EAAQJ,EAAoBiB,SAASI,kBAAoBrB,EAAoBI,MAAMkB,sBCH7E7N,gBANS,SAAC,GAAD,MAAe,CACrCC,KADsB,EAAGA,QAIA,GAEZD,EAjBQ,SAAC,GACtB,OADmC,EAAXC,KAKtB,6BACE,iDAJK,kBAAC,GAAD,SC6EID,I,OAAAA,aANS,SAACtG,GAAD,MAAY,CAClCuG,KAAMvG,EAAMuG,QAGa,GAEZD,EA/EW,SAAC0I,GACzB,IA0DMoF,EAA2B,SAACnT,EAAOoN,GACvC,OAAOpN,IAAU+N,EAAMzI,KAAKtF,MAAQoN,EAAQ,IAE9C,OACE,yBAAKlE,GAAG,eACN,yBAAKA,GAAG,UACN,6BA9CG6E,EAAMqF,WAAWjJ,KAAI,SAAC2H,EAASuB,GACpC,OACE,yBACE9J,IAAKuI,EAAQA,QAAUuB,EACvBC,YAAU,SACVC,cAAY,OACZnG,MAAO,CACLlF,SAAU,WACVsL,UAAW,UAGb,yBACEpG,MAAO+F,EAAyBrB,EAAQ2B,SAAU,CAChDC,UAAW,QACXxL,SAAU,WACVyL,IAAK,EACLC,MAAO,EACPC,SAAU,UAEZ3K,GAAG,gBAEH,yBACEkE,MAAO+F,EAAyBrB,EAAQ2B,SAAU,CAChDK,gBAAiB,YAEnB5K,GAAG,WAEH,uBAAGA,GAAG,eAAe4I,EAAQA,UAE/B,+BACG,IADH,UA/CwB,SAACiC,GACjC,IAAIC,EAAI,IAAIC,KAIZ,OAFAF,EAAO,IAAIE,KAAKF,GACGtM,KAAKyM,OAAOF,EAAID,GAAL,QAE5B,KAAK,EACH,MAAO,QACT,KAAK,EACH,MAAO,YACT,KAAK,EACH,MAAO,aACT,QACE,MAAM,GAAN,OAAUA,EAAKC,EAAf,YAAoBD,EAAKI,EAAzB,YAA8BJ,EAAKK,IAoCzBC,CAA0BvC,EAAQwC,WAAWP,MAFnD,eAE+DjC,EAAQwC,WAAWlI,KAFlF,eAGW0F,EAAQyC,YAAc,WAgBpCxG,EAAMyG,iBCzDf,SAASC,KACP,IAAIV,EAAO,IAAIE,KAEf,OADA9R,QAAQC,IAAI2R,GACLA,E,IAIHW,G,oDACJ,WAAY3G,GAAQ,IAAD,+BACjB,cAAMA,IA0BR4G,UAAY,WACV,OACE,yBACEzL,GAAG,aACHkE,MAAO,CAAEwH,MAAO,OAAQC,MAAO,QAC/BC,IAAK,SAACC,GACJ,EAAKP,WAAaO,IAGnB,MApCY,EAyCnBC,eAAiB,WACf,EAAKC,YAAYC,eAAe,CAAEC,SAAU,YA1C3B,EA6CnBC,WAAa,SAACtD,GACZ3P,QAAQC,IAAI0P,IA9CK,EAgDnBuD,aAAe,SAACvO,GACd,EAAKsH,SAAS,CAAEkH,QAASxO,EAAEyO,cAAcvJ,QACzC/F,EAAGC,KACD,UACAY,EAAEyO,cAAcvJ,MACZ,CAAEuI,WAAY,EAAKjP,KAAKwE,UAAW0D,MAAM,EAAM5L,OAAQ,EAAKmM,MAAMO,KAAK1M,QACvE,CAAE2S,WAAY,EAAKjP,KAAKwE,UAAW0D,MAAM,EAAO5L,OAAQ,EAAKmM,MAAMO,KAAK1M,UAtD7D,EA0DnB4T,aAAe,SAAC1O,GACI,KAAdA,EAAE2O,UAAiC,IAAf3O,EAAE4O,UACxB,EAAKC,gBAAgB7O,IA5DN,EA+DnB6O,gBAAkB,SAAC7O,GAEjB,GADAA,EAAEe,kBACG,EAAK9I,MAAMuW,QAAS,OAAO,KAEhC,EAAKlH,SAAS,CAAEkH,QAAS,KACzBrP,EAAGC,KAAK,UAAW,CACjBqO,WAAY,EAAKjP,KAAKwE,UACtB0D,MAAM,EACN5L,OAAQ,EAAKmM,MAAMO,KAAK1M,SAE1BqE,EAAGC,KAAK,UAAW,CACjB4L,QAAS,EAAK/S,MAAMuW,QACpBf,WAAY,EAAKjP,KAAKwE,UACtB2J,SAAU,EAAKnO,KAAKtF,MACpB4B,OAAQ,EAAKmM,MAAMO,KAAK1M,OACxB0S,WAAY,CAAElI,MA3FV,IAAI6H,MACF2B,eAAe,GAAI,CAAEC,KAAM,UAAWC,OAAQ,YA0FX/B,KAAMU,SA9EhC,EAkFnBsB,uBAAyB,WACvB,GAAI,EAAKhX,MAAMiX,gBAAgBrF,OAAS,EAAG,OAAO,KAC7C,GAA0C,IAAtC,EAAK5R,MAAMiX,gBAAgBrF,OAClC,OACE,2BACE,4BAAK,EAAK5R,MAAMiX,iBADlB,yBAKF,IAAIC,EAAQ,GAEZ,OADA,EAAKlX,MAAMiX,gBAAgB7L,KAAI,SAAC+L,GAAD,OAAWD,EAAQA,EAAQ,IAAMC,KAE9D,2BACE,4BAAKD,GADP,0BA5FJ,EAAKlX,MAAQ,CACXuW,QAAS,GACTa,SAAU,GACVH,gBAAiB,GACjBxI,MAAM,GAGR,EAAKgH,WAAalO,IAAM8P,YATP,E,iEAYbvG,KAAK9B,MAAMsI,OACbxG,KAAKyG,SAAWzG,KAAK9B,MAAMsI,KAAKC,SAChCzG,KAAK0G,YAAc1G,KAAK9B,MAAMsI,KAAKE,YACnC1G,KAAK2G,SAAW3G,KAAK9B,MAAMsI,KAAKI,OAChC5G,KAAKvK,KAAOuK,KAAK9B,MAAMzI,Q,2CAIpBuK,KAAK9B,MAAMC,SACdhN,EAAU,O,6CAIZiF,EAAGyQ,MAAM,UAAY7G,KAAK9B,MAAMO,KAAK1M,U,kCA4E3B+U,GACVA,EAAKvJ,MAAMwJ,OAAS,MACpBD,EAAKvJ,MAAMwJ,OAASD,EAAKE,aAAe,O,+BAIxC,OAAKhH,KAAK9B,MAAMC,QAIX6B,KAAK9B,MAAMO,KAAKpL,MAAM2M,KAAK9B,MAAMO,KAAK1M,QAMzC,yBAAKsH,GAAG,cACN,yBAAKA,GAAG,YAAY2G,KAAKkG,0BACzB,kBAAC,GAAD,CACEzQ,KAAMuK,KAAKvK,KACX8N,WAAYvD,KAAK9B,MAAMO,KAAKpL,MAAM2M,KAAK9B,MAAMO,KAAK1M,QAAQkV,WAE5D,0BAAM/E,SAAUlC,KAAK8F,iBACnB,kBAAC7J,GAAA,EAAD,CAAY5C,GAAG,gBACb,kBAAC4C,GAAA,EAAW0G,OAAZ,KACE,kBAAC,KAAD,CACE7J,QAASkH,KAAKkH,WACd7N,GAAG,aACHkE,MAAO,CACL0G,gBAAiBjE,KAAK9Q,MAAMuW,QAAU,QAAU,SAElDhN,QAAQ,qBANV,SAWF,kBAACyD,GAAA,EAAD,CACEiL,UAAWnH,KAAK2F,aAChByB,GAAG,WACHC,KAAK,IACLC,kBAAA,EACAC,aAAa,MACbnL,SAAU4D,KAAKwF,aACfrJ,MAAO6D,KAAK9Q,MAAMuW,QAClBhT,KAAK,OACLgK,YAAY,mBAEd,kBAACR,GAAA,EAAW0G,OAAZ,KACE,kBAAC,KAAD,CACEtJ,GAAG,aACHkE,MAAO,CACL0G,gBAAiBjE,KAAK9Q,MAAMuW,QAAU,UAAY,WAEpDhT,KAAK,SACLgG,QAAQ,2BA3ClBtH,EAAU,KACH,uCALPA,EAAU,KACH,yC,GA9GYsF,IAAMwJ,WA8KhBzK,gBARS,SAACtG,GAAD,MAAY,CAClCsX,KAAMtX,EAAMsX,KACZ/Q,KAAMvG,EAAMuG,KACZ0I,QAASjP,EAAMsY,KAAKrJ,QACpBM,KAAMvP,EAAMuY,SACZhN,UAAWvL,EAAMuL,aAGqB,GAAzBjF,CAA6BqP,ICpI7BrP,I,cAAAA,aAPS,SAAC,GAAD,MAAkC,CACxDC,KADsB,EAAGA,KAEzBC,SAFsB,EAASA,SAG/ByE,QAHsB,EAAmBA,WAOH,CAAErH,eAA3B0C,EA1CH,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAA4B0E,GAAc,EAApCrH,WAAoC,EAAxB4C,SAAwB,EAAdyE,SAsBzC,OArBAsB,qBAAU,WACHhG,GACHtE,EAAU,KACRsE,IAAS0E,GACX,sBAAC,4BAAAlI,EAAA,+EAEuB0J,EAASC,IAAIrL,0BAAgBkF,EAAKpF,MAFzD,OAEO8J,EAFP,OAGG7H,QAAQC,IAAI4H,GAHf,gDAMG7H,QAAQuI,MAAR,MANH,wDAAD,KAaD,CAACpF,EAAM0E,IAKR,kBAAC,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuN,KAAK,WAAWC,OAAK,EAACC,UAAWC,KACxC,kBAAC,IAAD,CAAOH,KAAK,YAAYC,OAAK,EAACC,UAAWpM,KACzC,kBAAC,IAAD,CAAOkM,KAAK,SAASC,OAAK,EAACC,UAAW/C,KACtC,kBAAC,IAAD,CAAO6C,KAAK,gBAAgBC,OAAK,EAACC,UAAWE,KAC7C,kBAAC,IAAD,CAAOJ,KAAK,IAAIC,OAAK,EAACC,UAAWG,WCtCnCC,GAAcC,QACW,cAA7BC,OAAO7W,SAAS8W,UAEe,UAA7BD,OAAO7W,SAAS8W,UAEhBD,OAAO7W,SAAS8W,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPzF,SAASsF,GACTnV,MAAK,SAAAuV,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1Z,QACfsZ,UAAUC,cAAcM,YAI1BzW,QAAQC,IACN,iHAKEgW,GAAUA,EAAOS,UACnBT,EAAOS,SAASN,KAMlBpW,QAAQC,IAAI,sCAGRgW,GAAUA,EAAOU,WACnBV,EAAOU,UAAUP,WAO5BxV,OAAM,SAAA2H,GACLvI,QAAQuI,MAAM,4CAA6CA,M,cCxF3DqO,GAAM,CAAE7V,MAAO,GAAItB,OAAQ,ICR3BmX,GAAM,CACRtC,QAAQ,EACRH,SAAU,GACV0C,YAAa,ICFXD,GAAM,CACRE,QAAS,CACL9N,OAAQ,CACJ+N,qBAAsB,sCACtB5Z,yBAA0B,4EAC1BH,YAAa,+CACbO,cAAe,uBACfH,qBAAsB,wBACtBL,QAAS,yCACT,gBAAiB,2DAErBia,OAAQ,CACJhW,OAAQ,SACR6C,QAAS,UACToT,QAAS,YAGbxH,oBAAqB,CAEjBI,MAAO,CACHkB,eAAgB,UAChBjB,OAAQ,UACR3I,OAAQ,WAEZuJ,SAAU,CACNI,kBAAmB,WACnBhB,OAAQ,UACR3I,OAAQ,YAEZtJ,MAAO,CACHuS,QAAS,mDACTjG,YAAa,kCACb5B,MAAO,gBACPuH,OAAQ,SAEZlS,SAAU,CACNuM,YAAa,2BACb5B,MACI,qGACJuH,OAAQ,YAEZnI,UAAW,CACPY,MACI,gFACJuH,OAAQ,cAEZ7H,SAAU,CACNM,MACI,+EACJuH,OAAQ,YAEZoH,QAAS,CACL3O,MAAO,sDACPuH,OAAQ,gBAEZqH,MAAO,CACH5O,MAAO,6BACPuH,OAAQ,iBAGhB5G,mBAAoB,CAChBiC,YAAa,2BAIrBiM,OAAQ,CACJpO,OAAQ,CACJ+N,qBAAsB,6EACtB/Z,YAAa,2IACbO,cAAe,8EACfH,qBAAsB,mFACtBD,yBAA0B,mQAC1BJ,QAAS,qVACT,gBAAiB,0NAErBia,OAAQ,CACJhW,OAAQ,uCACR6C,QAAS,wCAEb4L,oBAAqB,CAGjBI,MAAO,CACHkB,eAAgB,iEAChBjB,OAAQ,gEACR3I,OAAQ,wCAEZuJ,SAAU,CACNI,kBAAmB,0CACnBhB,OAAQ,0DACR3I,OAAQ,wCAEZtJ,MAAO,CACHuS,QAAS,yMACTjG,YAAa,0HACb5B,MAAO,yFACPuH,OAAQ,wCAEZlS,SAAU,CACNuM,YAAa,oFACb5B,MACI,kUACJuH,OAAQ,iCACRuH,QAAS,iEACTC,aAAc,6GAElB3P,UAAW,CACPY,MAAO,mQACPuH,OAAQ,yCAEZ7H,SAAU,CACNM,MAAO,yQACPuH,OAAQ,+CAEZoH,QAAS,CACL3O,MAAO,gNACPuH,OAAQ,2DAEZqH,MAAO,CACH5O,MAAO,wHACPuH,OAAQ,4DAGhB5G,mBAAoB,CAChBiC,YAAa,qGAoBVoM,GAXS,WAAiG,IAAhG3a,EAA+F,uDAAvF,CAAEqM,MAAO2N,GAAG,QAAahR,QAAS,UAAWuC,UAAWL,OAAO0P,KAAKZ,KAAQa,EAAW,uCACpH,OAAQA,EAAOtX,MACX,IlB1HsB,iBkB4HlB,MAAO,CAAE8I,MAAO2N,GAAIa,EAAOrX,SAAUwF,QAAS6R,EAAOrX,QAAS+H,UAAWL,OAAO0P,KAAKZ,KACzF,QACI,OAAOha,ICpIJ8a,eAAgB,CAC3BvU,KCAW,WAA2B,IAA1BvG,EAAyB,uDAAjB,KAAM6a,EAAW,uCACvC,OAAQA,EAAOtX,MACb,IpBFuB,coBIvB,IpBbmB,UoBcjB,OAAOsX,EAAOrX,QAChB,IpBdoB,WoBelB,OAAO,KACT,IpBLsB,aoBSpB,OAHKxD,EAAMsS,YAAYuI,EAAOrX,QAAQrC,OACpCnB,EAAMsS,YAAYuI,EAAOrX,QAAQrC,KAAO0Z,EAAOrX,SAE1C,eAAKxD,GACd,IpBTgC,uBoBU9B,GAAIA,EAAMsS,YAAYuI,EAAOrX,QAAQrC,KAAM,CAAC,IAAD,EACnB0Z,EAAOrX,QAArB+C,EADiC,EACjCA,KAAMpF,EAD2B,EAC3BA,IACdnB,EAAMsS,YAAYnR,GAAOoF,EACzBvG,EAAMmE,MAAM0W,EAAOrX,QAAQX,QAAU,CACnC1B,IAAK0Z,EAAOrX,QAAQX,OACpBU,KAAM,UAGV,OAAO,eAAKvD,GACd,IpBjByB,gBoBqBvB,OAHIA,EAAMsS,YAAYuI,EAAOrX,QAAQrC,aAC5BnB,EAAMsS,YAAYuI,EAAOrX,QAAQrC,KAEnC,eAAKnB,GAEd,QACE,OAAOA,ID7BT+a,KAAMC,KACNzC,SHDW,WAA0B,IAAzBvY,EAAwB,uDAAhBga,GAAKa,EAAW,uCACtC,OAAQA,EAAOtX,MACb,IhBTuB,cgBcrB,OAJAsX,EAAOrX,QAAQyX,SAAQ,SAAC1L,GACtBvP,EAAMmE,MAAMoL,EAAKpO,KAAOoO,KAGnB,eAAKvP,GACd,IhBhBuB,cgBkBrB,OADAA,EAAMmE,MAAM0W,EAAOrX,QAAQrC,KAAO0Z,EAAOrX,QAClC,eAAKxD,GACd,IhBLuB,cgBQrB,OAFAoD,QAAQC,IAAIwX,EAAOrX,SACnBxD,EAAMmE,MAAM0W,EAAOrX,QAAQX,QAAQkV,SAAS1V,KAAKwY,EAAOrX,QAAQuP,SACzD,eAAK/S,GAEd,IhBpBqB,YgBsBnB,OADAA,EAAM6C,OAASgY,EAAOrX,QAAQrC,IACvB,eAAKnB,GACd,IhBhBgC,uBgBmB9B,OAFAA,EAAMmE,MAAM0W,EAAOrX,QAAQ+L,KAAKpO,KAAO0Z,EAAOrX,QAAQ+L,KAE/C,eAAKvP,GACd,QACE,OAAOA,IGtBTwG,SAAUmU,GACVrD,KFNW,WAA0B,IAAzBtX,EAAwB,uDAAhBga,GAAKa,EAAW,uCAEpC,OAAQA,EAAOtX,MACX,IAAK,MAED,MAEJ,QACI,OAAOvD,MILbkb,GACHlC,OAAOmC,sCACNnC,OAAOmC,qCAAqC,CAC1CC,OAAO,EACPC,WAAY,MAEhBC,IACIC,GAAQC,YACZC,GACAP,GAAiBQ,YAAgBC,OAEnCC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,GAAD,OAEF3T,SAASkU,eAAe,SNHnB,SAAkBzC,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIyC,IAAIC,GAAwBhD,OAAO7W,SAAS8Z,MACpDC,SAAWlD,OAAO7W,SAAS+Z,OAIvC,OAGFlD,OAAOlR,iBAAiB,QAAQ,WAC9B,IAAMsR,EAAK,UAAM4C,GAAN,sBAEPlD,KAgEV,SAAiCM,EAAOC,GAEtC8C,MAAM/C,EAAO,CACX1W,QAAS,CAAE,iBAAkB,YAE5BuB,MAAK,SAAAmY,GAEJ,IAAMC,EAAcD,EAAS1Z,QAAQgK,IAAI,gBAEnB,MAApB0P,EAAS9M,QACO,MAAf+M,IAA8D,IAAvCA,EAAYxK,QAAQ,cAG5CyH,UAAUC,cAAc+C,MAAMrY,MAAK,SAAAuV,GACjCA,EAAa+C,aAAatY,MAAK,WAC7B+U,OAAO7W,SAASqa,eAKpBrD,GAAgBC,EAAOC,MAG1BrV,OAAM,WACLZ,QAAQC,IACN,oEAvFAoZ,CAAwBrD,EAAOC,GAI/BC,UAAUC,cAAc+C,MAAMrY,MAAK,WACjCb,QAAQC,IACN,iHAMJ8V,GAAgBC,EAAOC,OMnB/BE,K","file":"static/js/main.06218cd2.chunk.js","sourcesContent":["exports.state = 'dev'\r\nexports.productionIp = ''","exports.responedList = {\r\n  DBError: \"DBError\",\r\n  infoInvalid: \"infoInvalid\",\r\n  route: \"koral | Michael you send me bad request! \",\r\n  FaildSave: \"FaildSave\",\r\n  loginFaildAlreadyConnect: \"loginFaildAlreadyConnect\",\r\n  //error when someone try to register but using a exists email please try diffrent email\r\n  UserIsAlreadyCreated: \"UserIsAlreadyCreated\",\r\n  // error when try to login to user but could not found email is wrong\r\n  UserNotCreated: \"UserNotCreated\",\r\n  // when try to create a company and there is already a company with this name\r\n  companyNameExists: \"companyNameExists\",\r\n  // error when someone try to login but user not exists or wrong info\r\n  usersNotFound: \"usersNotFound\",\r\n  // error when someone try to use a fake or not exists email\r\n  emailNotExistsL: \"emailIsFake\",\r\n  // error when the DB cant find something\r\n  NotExists: \"NotExists\",\r\n  isInUse: \"isInUse\",\r\n};\r\n","//user api\r\n//send {email, password,expoId}\r\n//recive {userData}\r\nexports.userLoginUrl = (password = '', email = '') => `/api/user/login?password=${password}&email=${email}`;\r\n\r\nexports.queryUsers = (_id = \"\", query = '') => `/api/friends/getUserForSerach?_id=${_id}&query=${query}`;\r\n\r\nexports.getMyFriendsUrl = (_id) => `/api/friends/getFriends?_id=${_id}`\r\n\r\n// send {email,password,firstName,lastName}\r\n//recive {userData}\r\nexports.userRegisterUrl = \"/api/user/register\";\r\n\r\n// send{newPassword,oldPassword,email}\r\n// recive none\r\n\r\nexports.userChangePasswrordUrl = \"/api/user/changepassword\";\r\n\r\n// send{email, restCode, newPassword}\r\n// recive none\r\nexports.userChangePasswordWithRestCode = \"/api/user/restpasswordrestcode\";\r\n\r\n//send {shitfs,email}\r\n//recivce shfit\r\nexports.useruploadshfits = \"/api/user/uploadshifts\";\r\n\r\n// send{email}\r\n// recive none\r\nexports.userRequestRestCode = \"/api/user/createrestpasswordcode\";\r\n\r\n\r\n// send arry of ids\r\n// recive array of cha_ts\r\nexports.userGetChatsUrl = \"/api/chat/getchats\";\r\n\r\n\r\n\r\nexports.sendFriendRequestUrl = \"/api/friends/sendfriendrequest\";\r\n\r\nexports.acceptFriendRequestUrl = \"/api/friends/friendreqaccept\"\r\n\r\n\r\n\r\n\r\n\r\n// send{audio, email, read={exports.audio=comapny||user},task=true}\r\n// recive none\r\nexports.userUpdateStyleUrl = \"api/user/updatestyleuser\";\r\n\r\n\r\n\r\n","import { createHashHistory } from \"history\";\r\nlet history = createHashHistory();\r\n\r\nexport const changeURL = (url) => {\r\n  if (history.location.pathname !== url) {\r\n    history.push(url);\r\n  }\r\n};\r\n\r\nexport default history;\r\n","import { productionIp, state } from \"../config/state\";\r\n\r\n/* eslint-disable no-unused-vars */\r\nconst inMyServer = \"http://84.108.77.188:1029\";\r\nconst ip = state === 'dev' ? inMyServer : productionIp;\r\nexport default ip\r\n","import axios from 'axios';\r\n\r\nimport ip from './serverIP'\r\nvar config = {\r\n    headers: {'Access-Control-Allow-Origin': '*'}\r\n};\r\nexport default axios.create({baseURL:ip},config);","import socketIOClient from 'socket.io-client'\r\nimport ip from './api/serverIP'\r\n\r\nexport default new socketIOClient(ip);","/* eslint-disable no-useless-escape */\r\nimport { changeURL } from \"../history\";\r\n\r\nimport server from \"../api/myserver\";\r\nimport {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  CREATE_USER,\r\n  CREATE_CHAT,\r\n  FETCH_CHAT,\r\n  FETCH_CHATS,\r\n  DELETE_CHAT,\r\n  WHAT_SYSTEM,\r\n  OPEN_CHAT,\r\n  UPDATE_STATUS_FRIEND,\r\n  NEW_FRIEND,\r\n  CHANGE_LEGUAGE,\r\n  DELETE_FRIEND,\r\n  ADD_MESSAGE,\r\n} from \"./types\";\r\nimport io from \"../io\";\r\nimport apiKeys from \"../api/apiKeys\";\r\nimport { responedList } from \"../respondList\";\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst config = {\r\n  onUploadProgress: function (progressEvent) {\r\n    var percentCompleted = Math.round(\r\n      (progressEvent.loaded * 100) / progressEvent.total\r\n    );\r\n    console.log(percentCompleted);\r\n  },\r\n};\r\nexport const openChat = (chatId) => async (dispatch) => {\r\n  const { data } = await server.post(\"/api/chat/getChat\", { chatId });\r\n  if (data.err) {\r\n    console.log(data);\r\n    alert(data.err);\r\n    return;\r\n  } else {\r\n    dispatch({\r\n      type: OPEN_CHAT,\r\n      payload: data,\r\n    });\r\n\r\n    changeURL(\"/chat\");\r\n  }\r\n};\r\n\r\nexport const createCHAT = (formValues) => async (dispatch) => {\r\n  const { data } = await server.post(\"/api/chat/createchat\", formValues);\r\n  console.log(data);\r\n\r\n  dispatch({ type: CREATE_CHAT, payload: data });\r\n};\r\nexport const updatefriend = (data) => {\r\n  return {\r\n    type: UPDATE_STATUS_FRIEND,\r\n    payload: data,\r\n  };\r\n};\r\nexport const add_Friend = (newFriend) => {\r\n  return {\r\n    type: NEW_FRIEND,\r\n    payload: newFriend,\r\n  };\r\n};\r\n\r\nexport const fetchChats = (Chats) => async (dispatch) => {\r\n  const chats = await server\r\n    .post(apiKeys.userGetChatsUrl, { ids: Chats })\r\n    .catch((err) => responedList.DBError)\r\n    .then((res) => res.data);\r\n  if (!chats || chats.err || chats === \"DBError\") {\r\n    console.log(\"error\");\r\n  } else {\r\n\r\n    dispatch({\r\n      type: FETCH_CHATS,\r\n      payload: chats,\r\n    });\r\n  }\r\n};\r\n\r\nexport const fetchChat = (CHATId) => async (dispatch) => {\r\n  const res = await server.get(`/api/user/CHAT${CHATId}`);\r\n\r\n  dispatch({\r\n    type: FETCH_CHAT,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const addMessage = (data) => {\r\n  return { type: ADD_MESSAGE, payload: data };\r\n}\r\nexport const deleteFriend = (friend) => {\r\n  return {\r\n    type: DELETE_FRIEND,\r\n    payload: friend,\r\n  };\r\n};\r\n\r\n// export const editCHAT =(CHATId,formValues)=> async dispatch=>{\r\n//     const res = await server.put(`/CHAT/edit`,{id:CHATId,formValues});\r\n//     dispatch({type:EDIT_CHAT,payload:res.data})\r\n//     setTimeout(()=>{history.push(\"/\")},50) ;\r\n\r\n// }\r\n\r\nexport const deleteChat = (rendId) => (dispatch) => {\r\n  server.delete(`/chat/delete/${rendId}`);\r\n  dispatch({ type: DELETE_CHAT, payload: rendId });\r\n  setTimeout(() => {\r\n    changeURL(\"/\");\r\n  }, 40);\r\n};\r\nexport const createUser = (formValues, signIn) => async (dispatch) => {\r\n  const res = await server\r\n    .post(apiKeys.userRegisterUrl, formValues)\r\n    .then((res) => res.data)\r\n    .catch((err) => responedList.DBError);\r\n\r\n  dispatch({ type: CREATE_USER, payload: res });\r\n  if (!res.err) {\r\n    io.emit(\"loginToTheWebSite\", formValues.email);\r\n    signIn(res._id);\r\n  }\r\n};\r\nexport const signIn = (data) => {\r\n  return { type: SIGN_IN, payload: data };\r\n};\r\n\r\nexport const signOut = () => {\r\n  io.emit(\"sgin out\")\r\n  return {\r\n    type: SIGN_OUT,\r\n  };\r\n};\r\n\r\nexport const isSystemIsPc = () => (dispatch) => {\r\n  const IsSystemPcTrueOrFalse = isMobileDevice();\r\n  dispatch({\r\n    type: WHAT_SYSTEM,\r\n    payload: IsSystemPcTrueOrFalse,\r\n  });\r\n};\r\n\r\nexport const origenalAddress = (newaddress) => (dispatch) => {\r\n  dispatch({\r\n    type: \"NEW_ADDRESS\",\r\n    payload: newaddress,\r\n  });\r\n};\r\n\r\nfunction isMobileDevice() {\r\n  var check = false;\r\n\r\n  (function (a) {\r\n    if (\r\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\r\n        a\r\n      ) ||\r\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n        a.substr(0, 4)\r\n      )\r\n    )\r\n      check = true;\r\n  })(navigator.userAgent || navigator.vendor || window.opera);\r\n  return check;\r\n}\r\n\r\nexport const changeLeg = (leg) => {\r\n  return {\r\n    type: CHANGE_LEGUAGE,\r\n    payload: leg,\r\n  };\r\n};\r\n","export const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const CREATE_CHAT = \"CREATE_CHAT\";\r\nexport const FETCH_CHATS = \"FETCH_CHATS\";\r\nexport const FETCH_CHAT = \"FETCH_CHAT\";\r\nexport const DELETE_CHAT = \"DELETE_CHAT\";\r\nexport const OPEN_CHAT = \"OPEN_CHAT\";\r\nexport const EDIT_CHAT = \"EDIT_CHAT\";\r\nexport const SELECTED_CHAT = \"SELECTED_CHAT\";\r\nexport const CREATE_USER = \"CREATE_USER\";\r\nexport const LOGIN = \"LOGIN\";\r\nexport const WHAT_SYSTEM = \"WHAT_SYSTEM\";\r\nexport const NEW_FRIEND = \"NEW_FRIEND\";\r\nexport const UPDATE_STATUS_FRIEND = \"UPDATE_STATUS_FRIEND\";\r\nexport const CHANGE_LEGUAGE = \"CHANGE_LEGUAGE\";\r\nexport const DELETE_FRIEND = \"DELETE_FRIEND\";\r\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport {\r\n  createCHAT,\r\n  openChat,\r\n  deleteChat,\r\n  fetchChats,\r\n  signOut,\r\n  changeLeg,\r\n} from \"../../action\";\r\nimport history, { changeURL } from \"../../history\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    alignItems: \"center\",\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(6),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nfunction DrawerPage({ user, children, language,\r\n  openChat,\r\n  signOut,\r\n  changeLeg }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n  var container = document.querySelector(\"#root\");\r\n\r\n  container.addEventListener(\"touchstart\", startTouch, { passive: true });\r\n  container.addEventListener(\"touchmove\", moveTouch, { passive: true });\r\n\r\n  // Swipe Up / Down / Left / Right\r\n  var initialX = null;\r\n  var initialY = null;\r\n\r\n  function startTouch(e) {\r\n    initialX = e.touches[0].clientX;\r\n    initialY = e.touches[0].clientY;\r\n  }\r\n\r\n  function moveTouch(e) {\r\n    if (initialX === null) {\r\n      return;\r\n    }\r\n\r\n    if (initialY === null) {\r\n      return;\r\n    }\r\n\r\n    var currentX = e.touches[0].clientX;\r\n    var currentY = e.touches[0].clientY;\r\n\r\n    var diffX = initialX - currentX;\r\n    var diffY = initialY - currentY;\r\n\r\n    if (Math.abs(diffX) > Math.abs(diffY)) {\r\n      // sliding horizontally\r\n      if (diffX > 0) {\r\n        // swiped left\r\n        handleDrawerClose();\r\n      } else {\r\n        // swiped right\r\n        handleDrawerOpen();\r\n      }\r\n    }\r\n\r\n    initialX = null;\r\n    initialY = null;\r\n\r\n    e.preventDefault();\r\n  }\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onClickOpenFriendChat = (chatId) => {\r\n    openChat(chatId);\r\n  };\r\n\r\n  const renderLogOutAndProfile = () => {\r\n    if (!user)\r\n      return null\r\n    // return (\r\n    //   <ListItem\r\n    //     onClick={() => {\r\n    //       changeURL(\"/\");\r\n    //     }}\r\n    //     button\r\n    //     key={\"login buuton\"}\r\n    //   >\r\n    //     <ListItemIcon>\r\n    //       <img\r\n    //         className=\"fa fa-plus-circle\"\r\n    //         src=\"login.png\"\r\n    //         alt=\"login button\"\r\n    //       />{\" \"}\r\n    //     </ListItemIcon>\r\n    //     <ListItemText primary={`${language.texts.loginRegisterScreen.login.button} / ${language.texts.loginRegisterScreen.register.button}`} />\r\n    //   </ListItem>\r\n    // );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem\r\n          onClick={() => changeURL(\"/profile\")}\r\n          button\r\n          key={\"profile buuton\"}\r\n        >\r\n          <ListItemIcon>\r\n            <img\r\n              className=\"fa fa-plus-circle\"\r\n              src={user.imageProfile}\r\n              alt=\"profile button\"\r\n            />{\" \"}\r\n          </ListItemIcon>\r\n          <ListItemText primary={user.firstName} />\r\n        </ListItem>\r\n        <ListItem\r\n          onClick={() => {\r\n            changeURL(\"/\");\r\n            signOut(user.email);\r\n          }}\r\n          button\r\n          key={\"LogOut buuton\"}\r\n        >\r\n          <ListItemIcon>\r\n            <img\r\n              className=\"fa fa-plus-circle\"\r\n              src=\"logOut.png\"\r\n              alt=\"logOut button\"\r\n            />{\" \"}\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"LogOut\"} />\r\n        </ListItem>\r\n        <Divider />\r\n\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  const AddFrindButtonAndFriendList = () => {\r\n    if (!user) return null;\r\n    return (\r\n      <>\r\n        <ListItem onClick={() => changeURL(\"addFrind\")} button key={\"addFrind\"}>\r\n          <ListItemIcon>\r\n            <img\r\n              className=\"fa fa-plus-circle\"\r\n              src=\"serachF.png\"\r\n              alt=\"addFrind button\"\r\n            />{\" \"}\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Serach A Frined\"} />\r\n        </ListItem>\r\n        <ListItem\r\n          onClick={() => changeURL(\"friends.list\")}\r\n          button\r\n          key={\"friends.list\"}\r\n        >\r\n          <ListItemIcon>\r\n            <img\r\n              className=\"fa fa-plus-circle\"\r\n              src=\"friendsList.png\"\r\n              alt=\"friends.list button\"\r\n            />{\" \"}\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"friends list\"} />\r\n        </ListItem>\r\n        <Divider />\r\n\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderFrindsList = () => {\r\n    if (!user) return null;\r\n    if (!user.friends) return null;\r\n    const friends = Object.values(user.friends);\r\n    return friends.map((user) =>\r\n\r\n      <ListItem\r\n        onClick={() => onClickOpenFriendChat(user.chatId)}\r\n        button\r\n        key={user._id}\r\n      >\r\n        <img src={user.imageProfile} alt=\"profile \" />\r\n        <ListItemText primary={`${user.firstName} ${user.lastName}`} />\r\n\r\n      </ListItem>\r\n    );\r\n  };\r\n  const renderImgLeg = () => {\r\n    let nextLan = language.languages.filter(l => l !== language.langNow)\r\n    return <img src={`${nextLan[0]}.png`} onClick={() => changeLeg(nextLan[0])} className='imgLeg' alt='icon for change leg right now hebrew' />\r\n  }\r\n\r\n  return (\r\n    <div className={` ${language.langNow === \"English\" ? \"textLeft\" : \"textRight\"} ${classes.root} `}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap></Typography>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Button\r\n          variant=\"contained\"\r\n          id=\"CWE\"\r\n          onClick={() => {\r\n            if (history.location.pathname === \"/\") return null;\r\n            changeURL(\"\");\r\n          }}\r\n        >\r\n          CWE\r\n        </Button>\r\n        <List>\r\n          {renderLogOutAndProfile()}\r\n\r\n        </List>\r\n\r\n        <List>\r\n          {AddFrindButtonAndFriendList()}\r\n\r\n        </List>\r\n\r\n        <List>\r\n          {renderFrindsList()}\r\n\r\n        </List>\r\n        <Divider />\r\n\r\n        {renderImgLeg()}\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = ({ user, language }) => ({\r\n  user,\r\n  language\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  changeLeg,\r\n  createCHAT,\r\n  openChat,\r\n  deleteChat,\r\n  fetchChats,\r\n  signOut,\r\n})(DrawerPage);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  FormControl,\r\n  InputGroup,\r\n  Container,\r\n  ListGroup,\r\n  Col,\r\n  Row,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\nimport { add_Friend } from \"../../action\";\r\nimport myserver from \"../../api/myserver\";\r\nimport { Avatar, LinearProgress } from \"@material-ui/core\";\r\nimport { queryUsers, sendFriendRequestUrl } from \"../../api/apiKeys\";\r\n\r\n\r\nconst SerachFriend = ({ user, language, add_Friend }) => {\r\n  const [error, setError] = useState(\"\")\r\n  const [users, setUsers] = useState([])\r\n  const [query, setQuery] = useState('')\r\n  const [idForTheClock, setIdForTheClock] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n\r\n  let errors = language.texts.errors\r\n  let texts = language.texts.SerachFriendScreen\r\n\r\n  useEffect(() => {\r\n    if (loading && !query) {\r\n      setLoading(false);\r\n    }\r\n  }, [query, loading])\r\n\r\n  const getAllUsers = async () => {\r\n    try {\r\n      if (!user || !query)\r\n        return null;\r\n\r\n      const res = await myserver.get(queryUsers(user._id, query));\r\n      let error = res.data.error;\r\n      let users = res.data.users;\r\n\r\n      if (error) {\r\n        console.log(error)\r\n        setLoading(false)\r\n        setError(error)\r\n      }\r\n\r\n      else {\r\n        setUsers(users || [])\r\n        setLoading(false)\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n\r\n  };\r\n\r\n  const onClickSendReq = async (geter) => {\r\n    try {\r\n      const res = await myserver.post(sendFriendRequestUrl, { geter, sender: user });\r\n\r\n      let error = res.data.error;\r\n      let data = res.data.user;\r\n\r\n      if (error) {\r\n        setError(error)\r\n      } else {\r\n        // what we do with the user we get\r\n        add_Friend(data);\r\n\r\n      }\r\n    } catch (error) {\r\n      setError(error);\r\n\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const cancelOrStartTheClock = () => {\r\n    if (idForTheClock) {\r\n      clearTimeout(idForTheClock);\r\n      setIdForTheClock('');\r\n    }\r\n    const time = setTimeout(() => {\r\n      setLoading(true);\r\n      getAllUsers();\r\n    }, 500);\r\n    setIdForTheClock(time);\r\n  };\r\n\r\n  const onChangText = (e) => {\r\n    if (e.target.value)\r\n      cancelOrStartTheClock();\r\n    setQuery(e.target.value)\r\n  };\r\n\r\n  const renderUsers = () => {\r\n    return users.map((user) => (\r\n      <ListGroup.Item key={user.email} className=\"row\">\r\n        <Row>\r\n          <Col xs=\"4\">\r\n            <Avatar\r\n              alt=\"profile\"\r\n              src={user.imageProfile}\r\n              style={{ fontSize: 30 }}\r\n            />\r\n          </Col>\r\n          <Col xs=\"7\">\r\n            <p>{`${user.firstName} ${user.email}`}</p>\r\n          </Col>\r\n          <Col xs=\"1\">\r\n            <Avatar\r\n              className=\"imgLeg imageAddFri\"\r\n              onClick={() => onClickSendReq(user)}\r\n              alt=\"add button\"\r\n              src=\"addFriend.png\"\r\n              style={{ fontSize: 30 }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ListGroup.Item>\r\n    ));\r\n  }\r\n\r\n  const renderErrorMessage = () => {\r\n\r\n    if (!error)\r\n      return null\r\n    let errorText = errors[error] || error\r\n    console.log(errorText)\r\n    return (\r\n      <Form.Text className=\" info\">\r\n        {errorText}\r\n      </Form.Text>\r\n    )\r\n\r\n\r\n  }\r\n\r\n  const renderLoading = () => {\r\n    return (\r\n      <Row className=\"container-fluid\">\r\n        <Col xs={12} md={12}>\r\n          <LinearProgress color=\"secondary\" />\r\n        </Col>\r\n      </Row>\r\n\r\n    )\r\n  }\r\n  const renderList = () => {\r\n    if (loading)\r\n      return renderLoading();\r\n\r\n    if (!query)\r\n      return (\r\n        <h1 className='info' > {texts.startLookin}</h1>\r\n      )\r\n\r\n\r\n    if (error)\r\n      return renderErrorMessage()\r\n\r\n\r\n    return renderUsers()\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <InputGroup className=\"mb-2 mr-sm-2\">\r\n        <FormControl\r\n          value={query}\r\n          onChange={onChangText}\r\n          id=\"inlineFormInputGroupUsername2\"\r\n          placeholder=\"email\"\r\n        />\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text>@</InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n      </InputGroup>\r\n      <ListGroup>{renderList()}</ListGroup>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ user, language }) => ({\r\n  user,\r\n  language\r\n});\r\n\r\nexport default connect(mapStateToProps, { add_Friend })(SerachFriend);\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { add_Friend, updatefriend, deleteFriend, addMessage } from \"../action\";\r\nimport myserver from \"../api/myserver\";\r\nimport io from \"../io\";\r\n\r\nclass LogicArea extends React.Component {\r\n  state = {\r\n    show: false,\r\n    whatKind: \"\",\r\n    body: \"\",\r\n    lastFriendReq: {},\r\n    newReqSound: new Audio(\"newReq.mp3\"),\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.setListenerSocket();\r\n  }\r\n  setListenerSocket = () => {\r\n    if (this.props.isLogin && this.props.user) {\r\n      if (!io.connected) {\r\n        io.connect();\r\n\r\n      }\r\n      io.on('userLive' + this.props.user._id, ({ type, data }) => {\r\n        console.log('socket work ', type)\r\n        switch (type) {\r\n\r\n          //my friend req have been accept\r\n          case \"NEW_FRIEND_REQUEST\":\r\n            console.log(\"friend\");\r\n            this.state.newReqSound.play();\r\n\r\n            this.setState({\r\n              lastFriendReq: data,\r\n              show: true,\r\n              whatKind: \"newFriendreq\",\r\n              body: data.firstName + \" \" + data.lastName,\r\n            });\r\n            this.props.add_Friend(data);\r\n\r\n            break;\r\n\r\n          // friend request accept \r\n          case \"firendReqAccept\":\r\n            if (data.status === \"accept\") {\r\n              this.state.newReqSound.play();\r\n\r\n              this.setState({\r\n                lastFriendReq: data,\r\n                show: true,\r\n                whatKind: \"newFriendreq\",\r\n                body: data.firstName + \" \" + data.lastName,\r\n              });\r\n            }\r\n            this.props.updatefriend({\r\n              _id: data._id,\r\n              status: \"accept\",\r\n              chatId: data.chatId,\r\n              user: data,\r\n              chat: data.chat,\r\n            });\r\n            break;\r\n\r\n          // friend  as been delete \r\n          case \"deleteFriend\":\r\n            console.log(\"delete\");\r\n            this.props.deleteFriend(data);\r\n            break;\r\n\r\n          // your friend request has been decline\r\n          case \"declineFriendReq\":\r\n            console.log(\"decline\");\r\n            this.props.deleteFriend(data);\r\n            break;\r\n\r\n          // your friend  has block you as a friend\r\n          case \"blockFriendReq\":\r\n            console.log(\"block\");\r\n\r\n            this.props.updatefriend({\r\n              _id: data._id,\r\n              user: data,\r\n              status: \"decline\",\r\n            });\r\n            break;\r\n          case \"message\":\r\n            this.props.addMessage(data);\r\n            console.log('got a message');\r\n            break;\r\n\r\n          default:\r\n            alert(data);\r\n            break;\r\n        }\r\n\r\n      });\r\n\r\n    } else if (this.state.id && !this.props.isLogin && !this.props.user) {\r\n      io.off();\r\n    }\r\n  };\r\n  onClickDeclineReq = (sender) => {\r\n    this.setState({ show: false });\r\n\r\n    // let res = await\r\n    myserver.post(\"/api/user/declineFriendReq\", {\r\n      sender: this.props.user,\r\n      geter: sender,\r\n    });\r\n  };\r\n\r\n  onClickAcceptReq = async (sender) => {\r\n    this.setState({ show: false });\r\n\r\n    //sender is who that accept a req geter is who that send a req\r\n    let res = await myserver.post(\"/api/user/friendreqaccept\", {\r\n      accepter: this.props.user,\r\n      sender: sender,\r\n    });\r\n\r\n    // res get \"good\" || \"bad\" String the rest is going on socket\r\n    alert(res.data);\r\n  };\r\n  onShowOrHide = () => {\r\n    this.setState({ show: !this.state.show });\r\n  };\r\n\r\n  renderModal = () => {\r\n    if (!this.state.show) return null;\r\n    var onGood, onBad, good, bad, header, body;\r\n\r\n    switch (this.state.whatKind) {\r\n      case \"error\":\r\n        bad = \"close\";\r\n        header = \"error\";\r\n        body = this.state.body;\r\n        onBad = () => this.onShowOrHide();\r\n        break;\r\n      case \"newFriendReq\":\r\n        console.log(this.state.lastFriendReq);\r\n        good = \"Accept\";\r\n        bad = \"Decline\";\r\n        header = \"you got new friend request\";\r\n        body = `your new friend request send from ${this.state.body} `;\r\n        onGood = () => {\r\n          this.onClickAcceptReq(this.state.lastFriendReq);\r\n        };\r\n        onBad = () => {\r\n          this.onClickDeclineReq(this.state.lastFriendReq);\r\n        };\r\n        break;\r\n      case \"friendReqAccept\":\r\n        bad = \"close\";\r\n        header = \"you Got Accept\";\r\n        body = ` ${this.state.body} accept your friend request 😎 `;\r\n        onBad = () => this.onShowOrHide();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={this.state.show}\r\n        onHide={this.onShowOrHide}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{header}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{body}</Modal.Body>\r\n        <Modal.Footer>\r\n          {good ? (\r\n            <Button variant=\"secondary\" onClick={onGood}>\r\n              {good}\r\n            </Button>\r\n          ) : null}\r\n          {bad ? (\r\n            <Button variant=\"danger\" onClick={onBad}>\r\n              {bad}\r\n            </Button>\r\n          ) : null}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <>{this.renderModal()}</>;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  add_Friend,\r\n  updatefriend,\r\n  deleteFriend,\r\n  addMessage\r\n})(LogicArea);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Profile = ({ user }) => {\r\n\r\n    const renderName = () => {\r\n        if (!user) return null\r\n\r\n        return user.firstName\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Hello {renderName()} </h1>\r\n        </div>\r\n    );\r\n\r\n}\r\nconst mapStateToProps = ({ user }) => ({\r\n    user,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {})(Profile);","import React from \"react\";\r\nimport { Avatar, Tooltip, Grid } from \"@material-ui/core\";\r\nimport { Button, Col, ListGroup, Row } from \"react-bootstrap\";\r\n\r\nfunction FrindCard({ friend, buttons }) {\r\n  const renderBuutonChatOrAccept = () => {\r\n    if (friend.status !== \"waiting\")\r\n      return (\r\n        <Grid key={friend._id} item>\r\n          {buttons.map((button) => {\r\n            return (\r\n              <Tooltip\r\n                onClick={() => button.onClick(friend)}\r\n                key={button.title}\r\n                title={button.title}\r\n              >\r\n                <Button>{button.text}</Button>\r\n              </Tooltip>\r\n            );\r\n          })}\r\n        </Grid>\r\n      );\r\n    return (\r\n      <Tooltip\r\n        key={\"waiting\"}\r\n        title={\"waiting for \" + friend.firstName + \" to response\"}\r\n      >\r\n        <Button>{\"Pending\"}</Button>\r\n      </Tooltip>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ListGroup.Item className=\"row\">\r\n      <Row>\r\n        <Col xs=\"4\">\r\n          <Avatar\r\n            alt=\"profile\"\r\n            src={friend.imageProfile}\r\n            style={{ fontSize: 30 }}\r\n          />\r\n        </Col>\r\n        <Col xs=\"5\">\r\n          <p>{`${friend.firstName} ${friend.email}`}</p>\r\n        </Col>\r\n        <Col xs=\"3\">{renderBuutonChatOrAccept()}</Col>\r\n      </Row>\r\n    </ListGroup.Item>\r\n  );\r\n}\r\n\r\nexport default FrindCard;\r\n","import React from \"react\";\r\nimport FrindCard from \"./FrindCard\";\r\n\r\nexport default function UsersList({\r\n  whatKindOfList,\r\n  friends,\r\n  buttons,\r\n  friendsListHeader,\r\n}) {\r\n  const renderUsersList = (text) => {\r\n    let arr = [];\r\n    if (friends.length > 0) {\r\n      friends.map((friend) =>\r\n        whatKindOfList.indexOf(friend.status) === -1\r\n          ? null\r\n          : arr.push(\r\n              <FrindCard key={friend._id} friend={friend} buttons={buttons} />\r\n            )\r\n      );\r\n    }\r\n    if (arr.length > 0) {\r\n      return (\r\n        <div>\r\n          <h3 className={\"friendsListHeader\"}>{friendsListHeader}</h3>\r\n          {arr}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return renderUsersList();\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { updatefriend, openChat } from \"../../action\";\r\nimport myserver from \"../../api/myserver\";\r\nimport UsersList from \"../chat/UsersList\";\r\nimport { acceptFriendRequestUrl } from \"../../api/apiKeys\";\r\n\r\nconst FriendsList = (props) => {\r\n  const onClickAcceptReq = (user2) => {\r\n    myserver.post(acceptFriendRequestUrl, {\r\n      user1: props.user,\r\n      user2,\r\n      type: 'accept'\r\n    });\r\n  };\r\n  const onclickDeletefriend = (geter) => {\r\n    console.log(\"delete\");\r\n    myserver.post(\"/api/user/deletefriendreq\", {\r\n      sender: props.user,\r\n      geter,\r\n    });\r\n  };\r\n  const onclickBlockfriend = (geter) => {\r\n    myserver.post(\"/api/user/blockfriendreq\", {\r\n      sender: props.user,\r\n      geter,\r\n      type: 'unBlock'\r\n    });\r\n  };\r\n\r\n  const onUnblockAfriend = (geter) => {\r\n    myserver.post(\"/api/user/unblockFirend\", {\r\n      sender: props.user,\r\n      geter,\r\n    });\r\n  };\r\n  const onOpenChat = (friend) => {\r\n    props.openChat(friend.chatId);\r\n  };\r\n  let btn1 = [\r\n    { onClick: onOpenChat, text: \"Open Chat\", title: \"Open Chat\" },\r\n    { onClick: onclickDeletefriend, text: \"Delete\", title: \"Delete Friend\" },\r\n    { onClick: onclickBlockfriend, text: \"Block\", title: \"Block A Friend\" },\r\n  ];\r\n  let btn2 = [\r\n    { onClick: onclickBlockfriend, text: \"Block\", title: \"Block Request\" },\r\n    { onClick: onClickAcceptReq, text: \"Accept\", title: \"Accept Request\" },\r\n    {\r\n      onClick: onclickDeletefriend,\r\n      text: \"Decline\",\r\n      title: \"Decline Request\",\r\n    },\r\n  ];\r\n  let btn3 = [\r\n    { onClick: onUnblockAfriend, text: \"UnBlock\", title: \"UnBlock A Friend\" },\r\n  ];\r\n\r\n  const renderFriendsList = () => {\r\n    if (props.user) {\r\n      const friends = Object.values(props.user.connections);\r\n      return (\r\n        <div>\r\n          <UsersList\r\n            friends={friends}\r\n            friendsListHeader={\"Friends\"}\r\n            buttons={btn1}\r\n            whatKindOfList={[\"accept\", \"iaccept\"]}\r\n          />\r\n\r\n          <UsersList\r\n            friends={friends}\r\n            friendsListHeader={\"Pendding Friends\"}\r\n            buttons={btn2}\r\n            whatKindOfList={[\"waiting\", \"sender\"]}\r\n          />\r\n\r\n          <UsersList\r\n            friends={friends}\r\n            friendsListHeader={\"Dark List\"}\r\n            buttons={btn3}\r\n            whatKindOfList={[\"iblock\"]}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return <h1>Please logIng Or Register</h1>;\r\n  };\r\n\r\n  return <Container>{renderFriendsList()}</Container>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updatefriend, openChat })(\r\n  FriendsList\r\n);\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, FormControl, InputGroup } from 'react-bootstrap'\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from '../../action';\r\n\r\nimport { userLoginUrl } from '../../api/apiKeys'\r\nimport myserver from '../../api/myserver'\r\nimport io from '../../io';\r\n\r\nfunction Login({ language, signIn }) {\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [hidePassword, setHidePassword] = useState(true)\r\n  const [error, setError] = useState('')\r\n  const [isLoading, setLoading] = useState(false)\r\n\r\n  let texts = language.texts.loginRegisterScreen\r\n  let errors = language.texts.errors\r\n  const handlerSubmit = async e => {\r\n    try {\r\n      setLoading(true);\r\n      e.preventDefault();\r\n      const res = await myserver.get(userLoginUrl(password, email))\r\n      setLoading(false);\r\n      if (res.data.error)\r\n        setError(res.data.error)\r\n\r\n      if (res.data.user) {\r\n        io.emit('loginToTheWebSite', res.data.user.email)\r\n        signIn(res.data.user)\r\n\r\n      }\r\n\r\n\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(error.message)\r\n    }\r\n  }\r\n\r\n\r\n  const renderErrorMessage = () => {\r\n\r\n    if (!error)\r\n      return null\r\n    let errorText = errors[error] || error\r\n    return (\r\n      <Form.Text className=\" error\">\r\n        {errorText}\r\n      </Form.Text>\r\n    )\r\n\r\n\r\n  }\r\n\r\n  const handlerPasswordChange = (e) => {\r\n    if (error) {\r\n      setTimeout(() => {\r\n        setError('')\r\n      }, 500);\r\n    }\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const handlerEmailChange = (e) => {\r\n    if (error) {\r\n      setTimeout(() => {\r\n        setError('')\r\n      }, 500);\r\n    }\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handlerSubmit}>\r\n      <h1 className=\"L-R-Leabel\">{texts.login.leabel}</h1>\r\n      <Form.Group className=\"\" controlId=\"formBasicEmail\">\r\n        <Form.Label>{texts.email.leabel}</Form.Label>\r\n        <Form.Control\r\n          value={email}\r\n          required\r\n          type=\"email\"\r\n          onChange={handlerEmailChange}\r\n          placeholder={texts.email.placeholder}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          {texts.email.subText}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>{texts.password.leabel}</Form.Label>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            value={password}\r\n            onChange={handlerPasswordChange}\r\n            required\r\n            type={hidePassword ? 'password' : 'text'}\r\n            placeholder={texts.password.placeholder}\r\n          />\r\n          <InputGroup.Append>\r\n            <Button onClick={() => setHidePassword(!hidePassword)} variant={`${hidePassword ? \"primary\" : \"danger\"}`} >\r\n              {hidePassword ? \"Show\" : \"Hide\"}\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n        {renderErrorMessage()}\r\n\r\n      </Form.Group>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"info\"\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? 'Loading…' : texts.login.button}\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = ({ language }) => {\r\n  return { language };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn })(Login);\r\n","import React, { useState } from 'react'\r\nimport { Button, Col, Form, FormControl, InputGroup } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../action'\r\nimport { userRegisterUrl } from '../../api/apiKeys'\r\nimport myserver from '../../api/myserver'\r\n\r\nfunction Register({ signIn, language }) {\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [error, setError] = useState('')\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [hidePassword, setHidePassword] = useState(true)\r\n\r\n  const texts = language.texts.loginRegisterScreen\r\n  let errors = language.texts.errors\r\n\r\n  const handlerPasswordChange = (e) => {\r\n    if (error) {\r\n      setTimeout(() => {\r\n        setError('')\r\n      }, 500);\r\n    }\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  const handlerEmailChange = (e) => {\r\n    if (error) {\r\n      setTimeout(() => {\r\n        setError('')\r\n      }, 500);\r\n    }\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n\r\n\r\n\r\n  const handlerSubmit = async e => {\r\n    e.preventDefault();\r\n    // eslint-disable-next-line\r\n    // const re = new RegExp(\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{7,32}$\");\r\n    // const isOk = re.test(password);\r\n\r\n    // if (!isOk) {\r\n    //   setError(texts.password.error)\r\n    //   return\r\n    // }\r\n\r\n    setLoading(true);\r\n    const res = await myserver.post(userRegisterUrl, { email, password, firstName, lastName })\r\n    console.log(res)\r\n    setLoading(false);\r\n    if (res.data.error) {\r\n      if (texts.errorLogin[res.data.error])\r\n        setError(texts.errorLogin[res.data.error])\r\n      else\r\n        setError('error unkown')\r\n\r\n    }\r\n\r\n    if (res.data.user) {\r\n\r\n      signIn(res.data.user)\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const renderErrorMessage = () => {\r\n\r\n    if (!error)\r\n      return null\r\n    let errorText = errors[error] || error\r\n    return (\r\n      <Form.Text className=\" error\">\r\n        {errorText}\r\n      </Form.Text>\r\n    )\r\n\r\n\r\n  }\r\n  const renderFullName = () => {\r\n    if (language.langNow === 'English')\r\n      return (\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>{texts.firstName.leabel}</Form.Label>\r\n              <InputGroup className=\"mb-2\">\r\n                <FormControl\r\n                  value={firstName}\r\n                  onChange={e => setFirstName(e.target.value)}\r\n                  required\r\n                  type={''}\r\n                />\r\n\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>{texts.lastName.leabel}</Form.Label>\r\n              <InputGroup className=\"mb-2\">\r\n                <FormControl\r\n                  value={lastName}\r\n                  onChange={e => setLastName(e.target.value)}\r\n                  required\r\n                  type={''}\r\n                />\r\n\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form.Row>\r\n      )\r\n\r\n    else\r\n      return (\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>{texts.lastName.leabel}</Form.Label>\r\n              <InputGroup className=\"mb-2\">\r\n                <FormControl\r\n                  value={lastName}\r\n                  onChange={e => setLastName(e.target.value)}\r\n                  required\r\n                  type={''}\r\n                />\r\n\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>{texts.firstName.leabel}</Form.Label>\r\n              <InputGroup className=\"mb-2\">\r\n                <FormControl\r\n                  value={firstName}\r\n                  onChange={e => setFirstName(e.target.value)}\r\n                  required\r\n                  type={''}\r\n                />\r\n\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form.Row>\r\n\r\n      )\r\n\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handlerSubmit}>\r\n      <h1 className=\"L-R-Leabel\">{texts.register.leabel}</h1>\r\n\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>{texts.email.leabel}</Form.Label>\r\n        <Form.Control value={email} required type=\"email\" onChange={handlerEmailChange} placeholder={texts.email.placeholder} />\r\n\r\n        <Form.Text className=\"text-muted\">\r\n          {texts.email.subText}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>{texts.password.leabel}</Form.Label>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            value={password}\r\n            onChange={handlerPasswordChange}\r\n            required\r\n            type={hidePassword ? 'password' : 'text'}\r\n            placeholder={texts.password.placeholder}\r\n          />\r\n          <InputGroup.Append>\r\n            <Button onClick={() => setHidePassword(!hidePassword)} variant={`${hidePassword ? \"primary\" : \"danger\"}`} >\r\n              {hidePassword ? \"Show\" : \"Hide\"}\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n\r\n      </Form.Group>\r\n      {renderFullName()}\r\n\r\n      { renderErrorMessage()}\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"primary\"\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? 'Loading…' : texts.register.button}\r\n      </Button>\r\n    </Form >\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ language }) => {\r\n  return { language };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn })(Register);\r\n","/* eslint-disable no-useless-escape */\r\nimport React from \"react\";\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Login from \"../../chat/Login\";\r\nimport Register from \"../../chat/Register\";\r\n\r\nimport './style.css'\r\n\r\n\r\nconst ScreenLoginRegister = ({ user, language: { texts: { loginRegisterScreen } }, language }) => {\r\n  const [login, setLogin] = useState(true)\r\n\r\n\r\n  const renderLoginOrRegistration = () => login ?\r\n    <Login /> :\r\n    <Register />\r\n\r\n  const renderButtonChangeMode = () => {\r\n    return (\r\n      <Button onClick={() => setLogin(!login)} id='changeModeRL' variant=\"primary\" size=\"lg\" block>\r\n        {login ? loginRegisterScreen.register.buttonForRegister : loginRegisterScreen.login.buttonForLogin}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container className=\"\">\r\n      <div className=\"containerLogin\">\r\n        {renderLoginOrRegistration()}\r\n        {renderButtonChangeMode()}\r\n\r\n      </div>\r\n    </Container>\r\n\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ user, language }) => {\r\n  return { user, language };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(ScreenLoginRegister);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ScreenLoginRegister from \"./register-login/ScreenLoginRegister\";\r\nconst LobyPageScreen = ({ user }) => {\r\n  if (!user) {\r\n    return <ScreenLoginRegister />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Main Page Screen</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n  user,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LobyPageScreen);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport const ChatWindow = (props) => {\r\n  const renderDateOfCreateMessage = (date) => {\r\n    var d = new Date();\r\n\r\n    date = new Date(date);\r\n    var numberOfDays = Math.floor((d - date) / (1000 * 60 * 60 * 24));\r\n    switch (numberOfDays) {\r\n      case 0:\r\n        return \"today\";\r\n      case 1:\r\n        return \"Yesterday\";\r\n      case 2:\r\n        return \"3 days ago\";\r\n      default:\r\n        return `${date.d}/${date.m}/${date.y}`;\r\n    }\r\n  };\r\n\r\n  const renderMessgesList = () => {\r\n    return props.mesagesArr.map((message, index) => {\r\n      return (\r\n        <div\r\n          key={message.message + index}\r\n          aria-live=\"polite\"\r\n          aria-atomic=\"true\"\r\n          style={{\r\n            position: \"relative\",\r\n            minHeight: \"100px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={renderStyleForTheMessage(message.senderId, {\r\n              textAlign: \"right\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 0,\r\n              minWidth: \"100px\",\r\n            })}\r\n            id=\"body-message\"\r\n          >\r\n            <div\r\n              style={renderStyleForTheMessage(message.senderId, {\r\n                backgroundColor: \"#b5f66f\",\r\n              })}\r\n              id=\"message\"\r\n            >\r\n              <p id=\"textMessage\">{message.message}</p>\r\n            </div>\r\n            <small>\r\n              {\" \"}\r\n              {`${renderDateOfCreateMessage(message.createTime.date)} at ${message.createTime.time\r\n                } by ${message.senderName}`}{\" \"}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderStyleForTheMessage = (email, style) => {\r\n    return email === props.user.email ? style : {};\r\n  };\r\n  return (\r\n    <div id=\"chat-window\">\r\n      <div id=\"output\">\r\n        <div>{renderMessgesList()}</div>\r\n\r\n        {props.scroolDown}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatWindow);\r\n","import React from \"react\";\r\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.css\";\r\nimport ChatWindow from \"../../chat/ChatWindow\";\r\nimport { changeURL } from \"../../../history\";\r\nimport io from \"../../../io\";\r\nfunction getTimeIn24Format() {\r\n  var d = new Date();\r\n  var n = d.toLocaleString([], { hour: \"2-digit\", minute: \"2-digit\" });\r\n  return n;\r\n}\r\n\r\nfunction getDate() {\r\n  let date = new Date();\r\n  console.log(date);\r\n  return date;\r\n  // return {m:d.getMonth()+1,d:d.getDate(),y:d.getFullYear()}\r\n}\r\n\r\nclass ChatScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      meassge: \"\",\r\n      meassges: [],\r\n      whoIsTypeingNow: [],\r\n      show: false,\r\n    };\r\n\r\n    this.scroolDown = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.call) {\r\n      this.myStream = this.props.call.myStream;\r\n      this.theirStream = this.props.call.theirStream;\r\n      this.gotAcall = this.props.call.onCall;\r\n      this.user = this.props.user;\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if (!this.props.isLogin) {\r\n      changeURL(\"/\");\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    io.close(\"typeing\" + this.props.chat.chatId);\r\n  }\r\n  scrooDown = () => {\r\n    return (\r\n      <div\r\n        id=\"hideScrool\"\r\n        style={{ float: \"left\", clear: \"both\" }}\r\n        ref={(el) => {\r\n          this.scroolDown = el;\r\n        }}\r\n      >\r\n        {\" \"}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  scrollToBottom = () => {\r\n    this.meassgesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  addmessage = (message) => {\r\n    console.log(message);\r\n  };\r\n  onChangeText = (e) => {\r\n    this.setState({ meassge: e.currentTarget.value });\r\n    io.emit(\r\n      \"typeing\",\r\n      e.currentTarget.value\r\n        ? { senderName: this.user.firstName, show: true, chatId: this.props.chat.chatId }\r\n        : { senderName: this.user.firstName, show: false, chatId: this.props.chat.chatId }\r\n    );\r\n  };\r\n\r\n  onEnterPress = (e) => {\r\n    if (e.keyCode === 13 && e.shiftKey === false) {\r\n      this.handlerClickMSG(e);\r\n    }\r\n  };\r\n  handlerClickMSG = (e) => {\r\n    e.preventDefault();\r\n    if (!this.state.meassge) return null;\r\n\r\n    this.setState({ meassge: \"\" });\r\n    io.emit(\"typeing\", {\r\n      senderName: this.user.firstName,\r\n      show: false,\r\n      chatId: this.props.chat.chatId,\r\n    });\r\n    io.emit(\"message\", {\r\n      message: this.state.meassge,\r\n      senderName: this.user.firstName,\r\n      senderId: this.user.email,\r\n      chatId: this.props.chat.chatId,\r\n      createTime: { time: getTimeIn24Format(), date: getDate() },\r\n    });\r\n  };\r\n\r\n  renderSomeOneIsTypeing = () => {\r\n    if (this.state.whoIsTypeingNow.length < 1) return null;\r\n    else if (this.state.whoIsTypeingNow.length === 1) {\r\n      return (\r\n        <p>\r\n          <em>{this.state.whoIsTypeingNow}</em> is typeing a meassge\r\n        </p>\r\n      );\r\n    } else {\r\n      let names = \"\";\r\n      this.state.whoIsTypeingNow.map((name) => (names = names + \" \" + name));\r\n      return (\r\n        <p>\r\n          <em>{names}</em> is typeing a meassge\r\n        </p>\r\n      );\r\n    }\r\n  };\r\n\r\n  auto_height(elem) {\r\n    elem.style.height = \"1px\";\r\n    elem.style.height = elem.scrollHeight + \"px\";\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isLogin) {\r\n      changeURL(\"/\");\r\n      return <h1>erro</h1>;\r\n    }\r\n    if (!this.props.chat.chats[this.props.chat.chatId]) {\r\n      changeURL(\"/\");\r\n      return <h1>dsads</h1>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"mario-chat\">\r\n        <div id=\"feedback\">{this.renderSomeOneIsTypeing()}</div>\r\n        <ChatWindow\r\n          user={this.user}\r\n          mesagesArr={this.props.chat.chats[this.props.chat.chatId].messages}\r\n        />\r\n        <form onSubmit={this.handlerClickMSG}>\r\n          <InputGroup id=\"messageinput\">\r\n            <InputGroup.Append>\r\n              <Button\r\n                onClick={this.setUpOffer}\r\n                id=\"buttonCall\"\r\n                style={{\r\n                  backgroundColor: this.state.meassge ? \"green\" : \"black\",\r\n                }}\r\n                variant=\"outline-secondary\"\r\n              >\r\n                call\r\n              </Button>\r\n            </InputGroup.Append>\r\n            <FormControl\r\n              onKeyDown={this.onEnterPress}\r\n              as=\"textarea\"\r\n              rows=\"1\"\r\n              aria-multiline\r\n              autoComplete=\"off\"\r\n              onChange={this.onChangeText}\r\n              value={this.state.meassge}\r\n              type=\"text\"\r\n              placeholder=\"type a message\"\r\n            />\r\n            <InputGroup.Append>\r\n              <Button\r\n                id=\"buttonChat\"\r\n                style={{\r\n                  backgroundColor: this.state.meassge ? \"#575ed8\" : \"#898bce\",\r\n                }}\r\n                type=\"submit\"\r\n                variant=\"outline-secondary\"\r\n              ></Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  call: state.call,\r\n  user: state.user,\r\n  isLogin: state.auth.isLogin,\r\n  chat: state.chatArea,\r\n  languages: state.languages\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ChatScreen);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, HashRouter } from \"react-router-dom\";\r\n\r\nimport DrawerPage from \"./components/screens/DrawerPage\";\r\nimport SerachFriendScreen from \"./components/screens/SerachFriendScreen\";\r\nimport LogicArea from \"./components/LogicArea\";\r\nimport Profile from \"./components/screens/ProfileScreen\";\r\nimport FriendsList from \"./components/screens/FriendsListScreen\";\r\nimport LobyPageScreen from \"./components/screens/LobyPageScreen\";\r\nimport ChatScreen from \"./components/screens/chatScreen/ChatScreen\";\r\nimport { fetchChats } from \"./action\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./css/App.css\";\r\nimport { changeURL } from \"./history\";\r\nimport { getMyFriendsUrl } from \"./api/apiKeys\";\r\nimport myserver from \"./api/myserver\";\r\n\r\n\r\nconst App = ({ user, fetchChats, language, friends }) => {\r\n  useEffect(() => {\r\n    if (!user)\r\n      changeURL(\"/\")\r\n    if (user && !friends) {\r\n      (async () => {\r\n        try {\r\n          let friends = await myserver.get(getMyFriendsUrl(user._id))\r\n          console.log(friends)\r\n\r\n        } catch (error) {\r\n          console.error(error)\r\n        }\r\n\r\n\r\n      })()\r\n    }\r\n\r\n  }, [user, friends]);\r\n\r\n\r\n\r\n  return (\r\n    <DrawerPage >\r\n      <LogicArea />\r\n      <HashRouter >\r\n        <Route path=\"/profile\" exact component={Profile} />\r\n        <Route path=\"/addFrind\" exact component={SerachFriendScreen} />\r\n        <Route path=\"/chat:\" exact component={ChatScreen} />\r\n        <Route path=\"/friends.list\" exact component={FriendsList} />\r\n        <Route path=\"/\" exact component={LobyPageScreen} />\r\n      </HashRouter>\r\n    </DrawerPage>\r\n  );\r\n};\r\nconst mapStateToProps = ({ user, language, friends }) => ({\r\n  user,\r\n  language,\r\n  friends,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchChats })(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  CREATE_CHAT,\r\n  FETCH_CHATS,\r\n  OPEN_CHAT,\r\n  ADD_MESSAGE,\r\n  UPDATE_STATUS_FRIEND,\r\n} from \"../action/types\";\r\n\r\nconst INS = { chats: {}, chatId: \"\" };\r\n\r\nexport default (state = INS, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CHATS:\r\n      action.payload.forEach((chat) => {\r\n        state.chats[chat._id] = chat;\r\n      });\r\n\r\n      return { ...state };\r\n    case CREATE_CHAT:\r\n      state.chats[action.payload._id] = action.payload;\r\n      return { ...state };\r\n    case ADD_MESSAGE:\r\n      console.log(action.payload)\r\n      state.chats[action.payload.chatId].messages.push(action.payload.message);\r\n      return { ...state };\r\n    // case DELETE_CHAT:return _.omit(state,action.payload);\r\n    case OPEN_CHAT:\r\n      state.chatId = action.payload._id;\r\n      return { ...state };\r\n    case UPDATE_STATUS_FRIEND:\r\n      state.chats[action.payload.chat._id] = action.payload.chat;\r\n\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const INS = {\r\n    onCall: false,\r\n    myStream: {},\r\n    thierStream: {},\r\n\r\n}\r\n\r\nexport default (state = INS, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'dsa':\r\n\r\n            break;\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import { CHANGE_LEGUAGE } from \"../action/types\";\r\nconst INS = {\r\n    English: {\r\n        errors: {\r\n            searchUsersForFriend: 'didnt find people with this serach ',\r\n            loginFaildAlreadyConnect: 'The user is already logged in. Please check if you have another Tab run  ',\r\n            infoInvalid: \"Email or password not valid please try agian\",\r\n            usersNotFound: \"User does not exist \",\r\n            UserIsAlreadyCreated: \"User is already exist\",\r\n            DBError: \"data base error please try agian later\",\r\n            \"Network Error\": 'we have Network Error please try agian in a few minutes'\r\n        },\r\n        navBtn: {\r\n            signIn: 'SignIn',\r\n            signOut: 'SignOut',\r\n            gallery: \"Gallery \"\r\n\r\n        },\r\n        loginRegisterScreen: {\r\n\r\n            login: {\r\n                buttonForLogin: \"Sgin in\",\r\n                leabel: \"Sgin in\",\r\n                button: \"Sgin in\",\r\n            },\r\n            register: {\r\n                buttonForRegister: \" Sign up\",\r\n                leabel: \"Sign up\",\r\n                button: \"Sign up \",\r\n            },\r\n            email: {\r\n                subText: \"We'll never share your email with anyone else.. \",\r\n                placeholder: \"Enter Email example@example.com\",\r\n                error: \"Invalid email\",\r\n                leabel: \"Email\",\r\n            },\r\n            password: {\r\n                placeholder: \"Enter a strong password \",\r\n                error:\r\n                    \"Your password must include at least 8 characters. At least 1 number And upper case  (like AWDS).  \",\r\n                leabel: \"Password\",\r\n            },\r\n            firstName: {\r\n                error:\r\n                    \"You must enter a first name without numbers and contain at least 2 characters\",\r\n                leabel: \"First Name\",\r\n            },\r\n            lastName: {\r\n                error:\r\n                    \"You must enter a last name without numbers and contain at least 2 characters\",\r\n                leabel: \"LastName\",\r\n            },\r\n            address: {\r\n                error: \"Need to enter full address city street number house\",\r\n                leabel: \"full address\",\r\n            },\r\n            phone: {\r\n                error: \"Need to enter phone number\",\r\n                leabel: \"Phone number\",\r\n            },\r\n        },\r\n        SerachFriendScreen: {\r\n            startLookin: 'look for a new friend '\r\n        }\r\n\r\n    },\r\n    Hebrew: {\r\n        errors: {\r\n            searchUsersForFriend: 'לא נימצא אנשים',\r\n            infoInvalid: \"אימייל או הסיסמה לא נכונים\",\r\n            usersNotFound: \"המשתמש לא קיים \",\r\n            UserIsAlreadyCreated: \"המשתמש כבר קיים\",\r\n            loginFaildAlreadyConnect: \"המשתמש כבר מחובר בבקשה תבדוק אם יש לך חלונית נוספת \",\r\n            DBError: \"יש בעיה בשרת בבקשה תנסה שוב עוד כמה דקות ואם זה ממשיך בבקשה תגיד לנו\",\r\n            \"Network Error\": 'יש לנו שגיאת רשת אנא נסה שוב בעוד מספר דקות '\r\n        },\r\n        navBtn: {\r\n            signIn: 'להתחבר',\r\n            signOut: 'להתנתק'\r\n        },\r\n        loginRegisterScreen: {\r\n\r\n\r\n            login: {\r\n                buttonForLogin: \" משמשמת רשום\",\r\n                leabel: \"להתחבר לאתר\",\r\n                button: \"להתחבר\",\r\n            },\r\n            register: {\r\n                buttonForRegister: \"  חדש כאן\",\r\n                leabel: \"הרשמה לאתר\",\r\n                button: \"להירשם\",\r\n            },\r\n            email: {\r\n                subText: 'לעולם לא נשתף את הדוא\"ל שלך עם אף אחד אחר. ',\r\n                placeholder: \"exmaple@example.com הכנס אימייל לדוגמה \",\r\n                error: \"אימייל הינו תקין\",\r\n                leabel: \"אימייל\",\r\n            },\r\n            password: {\r\n                placeholder: \"הכנס סיסמה חזקה \",\r\n                error:\r\n                    \"וספרות (A-Z)ותו גדול (a-z)  על הסיסמה להיות מינימום 7 תווים ולהכיל תווים  \",\r\n                leabel: \"סיסמה\",\r\n                leabel2: 'וידוי סיסמה ',\r\n                placeholder2: 'הכנס את הסיסמה שינית'\r\n            },\r\n            firstName: {\r\n                error: \"צריך להכניס שם פרטי בלי מספרים ולהכיל 2 תווים לפחות\",\r\n                leabel: \"שם פרטי\",\r\n            },\r\n            lastName: {\r\n                error: \"צריך להכניס שם משפחה בלי מספרים ולהכיל 2 תווים לפחות\",\r\n                leabel: \"שם משפחה\",\r\n            },\r\n            address: {\r\n                error: \"צריך להכניס כתובת מלאה עיר רחוב מספר בית\",\r\n                leabel: \"כתובת מלאה\",\r\n            },\r\n            phone: {\r\n                error: \"צריך להכניס מספר טלפון\",\r\n                leabel: \"מספר טלפון\",\r\n            }\r\n        },\r\n        SerachFriendScreen: {\r\n            startLookin: 'התחל/י חברות ניפלא  '\r\n\r\n        },\r\n\r\n    },\r\n};\r\n\r\n\r\n\r\nconst languageReducer = (state = { texts: INS['English'], langNow: 'English', languages: Object.keys(INS) }, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LEGUAGE:\r\n\r\n            return { texts: INS[action.payload], langNow: action.payload, languages: Object.keys(INS) }\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\nexport default languageReducer","import { combineReducers } from 'redux';\r\nimport { reducer } from 'redux-form';\r\n\r\nimport userReducer from './userReducer'\r\nimport userAreaReducer from './chatArea';\r\nimport callReducer from './callReducer';\r\nimport languageReducer from './languageReducer';\r\n\r\nexport default combineReducers({\r\n    user: userReducer,\r\n    form: reducer,\r\n    chatArea: userAreaReducer,\r\n    language: languageReducer,\r\n    call: callReducer\r\n});","import {\r\n  CREATE_USER,\r\n  SIGN_OUT,\r\n  NEW_FRIEND,\r\n  UPDATE_STATUS_FRIEND,\r\n  DELETE_FRIEND,\r\n  SIGN_IN,\r\n} from \"../action/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case CREATE_USER:\r\n      return action.payload;\r\n    case SIGN_IN:\r\n      return action.payload;\r\n    case SIGN_OUT:\r\n      return null;\r\n    case NEW_FRIEND:\r\n      if (!state.connections[action.payload._id]) {\r\n        state.connections[action.payload._id] = action.payload;\r\n      }\r\n      return { ...state };\r\n    case UPDATE_STATUS_FRIEND:\r\n      if (state.connections[action.payload._id]) {\r\n        const { user, _id } = action.payload;\r\n        state.connections[_id] = user;\r\n        state.chats[action.payload.chatId] = {\r\n          _id: action.payload.chatId,\r\n          type: \"friend\",\r\n        };\r\n      }\r\n      return { ...state };\r\n    case DELETE_FRIEND:\r\n      if (state.connections[action.payload._id]) {\r\n        delete state.connections[action.payload._id];\r\n      }\r\n      return { ...state };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport reducers from \"./reducers\";\r\n// eslint-disable-next-line\r\nconst composeEnhancers =\r\n  (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      trace: true,\r\n      traceLimit: 25,\r\n    })) ||\r\n  compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}